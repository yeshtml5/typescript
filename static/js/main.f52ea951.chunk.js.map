{"version":3,"sources":["static/svg/typescript.svg","contexts/global.tsx","contexts/page.tsx","pages/common/layout/content/navi.tsx","pages/common/layout/content/header.tsx","pages/common/layout/index.tsx","pages/guide/typescript/index.tsx","pages/main/index.tsx","pages/form/index.tsx","pages/modules/markdown/index.tsx","pages/modules/todo/context.tsx","pages/modules/todo/content/list.tsx","pages/modules/todo/content/add.tsx","pages/modules/todo/content/index.tsx","pages/modules/todo/index.tsx","pages/login/index.tsx","components/hooks/useHooks.ts","pages/guide/index.tsx","pages/guide/hooks/index.tsx","components/hooks/useChanges.ts","pages/ui/tab.tsx","router.tsx","App.tsx","index.tsx"],"names":["module","exports","stateContext","createContext","undefined","dispatchContext","globalReducer","state","action","type","Error","GlobalContextProvider","children","useReducer","auth","dispatch","Provider","value","useGlobalState","useContext","reducer","info","PageContextProvider","title","Navi","useState","link","data","Fragment","map","index","key","to","className","src","Logo","href","props","Greetings","name","mark","defaultProps","App","global","useGlobalDispatch","Content","onClick","console","log","newVariable","window","navigator","share","text","url","then","alert","styled","section","useForm","register","setValue","onSubmit","handleSubmit","age","useEffect","Form","ref","defaultValue","required","TodoStateContext","TodoDispatchContext","todosReducer","nextId","Math","max","todo","id","concat","done","filter","TodoContextProvider","todos","useTodoState","List","Add","useTodoDispatch","placeholder","onChange","e","target","div","Todo","fetch","response","json","list","Login","callback","changes","event","persist","_val","checked","err","_info","useChanges","mode","htmlFor","password","JSON","stringify","Guide","process","Hooks","clickHandler","method","Tab","Router","basename","exact","path","component","main","form","markdown","tab","login","guide","hooks","ReactDOM","render","document","getElementById"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,wC,gLCarCC,EAAeC,6BAAkCC,GACjDC,EAAkBF,6BAA0CC,GAOlE,SAASE,EAAcC,EAAoBC,GACzC,OAAQA,EAAOC,MACb,IAAK,SACH,OAAOD,EACT,IAAK,SACH,OAAO,eAAID,EAAX,GAAqBC,GACvB,IAAK,SACH,MAAO,GACT,QACE,MAAM,IAAIE,MAAM,qBAOf,SAASC,EAAT,GAAyE,IAAzCC,EAAwC,EAAxCA,SAAwC,EAInDC,qBAAWP,EAHhB,CACnBQ,KAAM,0BAFqE,mBAItEP,EAJsE,KAI/DQ,EAJ+D,KAK7E,OACE,kBAACV,EAAgBW,SAAjB,CAA0BC,MAAOF,GAC/B,kBAACb,EAAac,SAAd,CAAuBC,MAAOV,GAAQK,IAQrC,SAASM,IACd,IAAMX,EAAQY,qBAAWjB,GACzB,IAAKK,EAAO,MAAM,IAAIG,MAAM,4BAC5B,OAAOH,ECzCT,IAAML,EAAeC,6BAAkCC,GACjDC,EAAkBF,6BAAwCC,GAOhE,SAASgB,EAAQb,EAAkBC,GACjC,OAAQA,EAAOC,MACb,IAAK,SACH,OAAO,eAAIF,EAAX,GAAqBC,EAAOa,MAC9B,IAAK,SACH,OAAOd,EACT,QACE,MAAM,IAAIG,MAAM,qBAOf,SAASY,EAAT,GAAuE,IAAzCV,EAAwC,EAAxCA,SAAwC,EAIjDC,qBAAWO,EAHX,CACxBG,MAAO,UAFkE,mBAIpEhB,EAJoE,KAI7DQ,EAJ6D,KAK3E,OACE,kBAAC,EAAgBC,SAAjB,CAA0BC,MAAOF,GAC/B,kBAAC,EAAaC,SAAd,CAAuBC,MAAOV,GAAQK,I,yBCJ7BY,MA1Bf,WAAgB,MAECC,mBAAsB,CACnC,CAACF,MAAO,OAAQG,KAAM,KACtB,CAACH,MAAO,QAASG,KAAM,UACvB,CAACH,MAAO,QAASG,KAAM,UACvB,CAACH,MAAO,QAASG,KAAM,UACvB,CAACH,MAAO,OAAQG,KAAM,SACtB,CAACH,MAAO,SAAUG,KAAM,WACxB,CAACH,MAAO,OAAQG,KAAM,SACtB,CAACH,MAAO,WAAYG,KAAM,eARrBC,EAFO,oBAwBd,OAAO,kBAAC,IAAMC,SAAP,KAVED,EAAKE,KAAI,WAA4BC,GAAW,IAArCP,EAAoC,EAApCA,MAAOG,EAA6B,EAA7BA,KACvB,OACE,wBAAIK,IAAKD,GACP,4BACE,kBAAC,IAAD,CAAME,GAAIN,GAAOH,U,iBCtBd,aAGb,OACE,gCACE,yBAAKU,UAAU,QACb,yBAAKC,IAAKC,MACV,6CAEF,kBAAC,EAAD,MACA,gCACE,uBAAGC,KAAK,6BAAR,4BACA,uBAAGA,KAAK,0CAAR,0CACA,kDACmB,6BADnB,2BCdO,WAACC,GAAe,IAEtBzB,EAAYyB,EAAZzB,SAEP,OACE,8BACE,kBAAC,EAAD,MACA,iCAAUA,KCRhB,SAAS0B,EAAT,GAAkD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KACxB,OACE,uCACUD,EADV,IACiBC,GAKrBF,EAAUG,aAAe,CACvBD,KAAM,KAGOF,Q,gPCRf,IAkEeI,EAlEO,WAEpB,IAAMC,EAASzB,IACTH,EN8CD,WACL,IAAMA,EAAWI,qBAAWd,GAC5B,IAAKU,EAAU,MAAM,IAAIL,MAAM,+BAC/B,OAAOK,EMjDU6B,GAIjB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWL,KAAK,SAASC,KAAK,MAC9B,kBAACK,EAAD,KACE,2BACE,4BACEC,QAAS,WACP/B,EAAS,CAACN,KAAM,SAAUc,MAAO,WAFrC,aAOF,2BACE,4BACEuB,QAAS,WACP/B,EAAS,CAACN,KAAM,SAAUc,MAAO,OAAQgB,KAAM,WAGrD,2BACE,4BACEO,QAAS,WACP/B,EAAS,CAACN,KAAM,SAAUc,MAAO,UAAWgB,KAAM,YAFtD,cAQF,4BACEO,QAAS,WACPC,QAAQC,IAAIL,KAFhB,gBAMA,gFACA,qCACA,6BACE,4BACEG,QAAS,WACP,IAAIG,EAAcC,OAAOC,UACrBF,EAAYG,MACdH,EACGG,MAAM,CACL7B,MAAO,wCACP8B,KAAM,uIACNC,IAAK,sBAENC,MAAK,kBAAMC,MAAM,+BAEpBA,MAAM,yBAZZ,gBA0BJX,EAAUY,IAAOC,QAAV,K,yaCrEb,IA2DehB,EA3DO,SAAAL,GACpB,IAAMM,EAASzB,IADc,EAYcyC,cAApCC,EAZsB,EAYtBA,SAAUC,EAZY,EAYZA,SACXC,GAAWC,EAbY,EAYFA,eACG,SAAApC,GAC5BoB,QAAQC,WAAWrB,EAAKqC,QAO1B,OAJAC,qBAAU,WACRlB,QAAQC,IAAIL,KACX,IAGD,kBAAC,EAAD,KACE,kBAACuB,EAAD,KACE,0BAAMJ,SAAUA,GACd,6BACE,6CACA,2BAAOvB,KAAK,YAAY4B,IAAKP,EAAUQ,aAAc,WAEvD,6BACE,4CACA,2BACE7B,KAAK,WACL4B,IAAKP,KAMT,6BACE,sCACA,2BAAOrB,KAAK,MAAM9B,KAAK,SAAS0D,IAAKP,EAAS,CAACS,UAAU,OAE3D,6BACE,4BACE5D,KAAK,SACLqC,QAAS,WACPe,EAAS,MAAO,KAChBA,EAAS,WAAY,SAJzB,YAQA,4BAAQpD,KAAK,UAAb,eASNyD,EAAOT,IAAOC,QAAV,KClDKhB,EAdO,WAMpB,OACE,kBAAC,EAAD,KACE,kDACA,kDACA,wC,QCFA4B,EAAmBnE,6BAAqCC,GACxDmE,EAAsBpE,6BAAwCC,GAQpE,SAASoE,EAAajE,EAAkBC,GACtC,OAAQA,EAAOC,MACb,IAAK,SACH,IAAMgE,EAASC,KAAKC,IAAL,MAAAD,KAAI,YAAQnE,EAAMsB,KAAI,SAAA+C,GAAI,OAAIA,EAAKC,QAAO,EACzD,OAAOtE,EAAMuE,OAAO,CAClBD,GAAIJ,EACJpB,KAAM7C,EAAO6C,KACb0B,MAAM,IAEV,IAAK,SACH,OAAOxE,EAAMsB,KAAI,SAAA+C,GAAI,OAAKA,EAAKC,KAAOrE,EAAOqE,GAAnB,eAA4BD,EAA5B,CAAkCG,MAAOH,EAAKG,OAAQH,KAClF,IAAK,SACH,OAAOrE,EAAMyE,QAAO,SAAAJ,GAAI,OAAIA,EAAKC,KAAOrE,EAAOqE,MACjD,QACE,MAAM,IAAInE,MAAM,qBAOf,SAASuE,EAAT,GAAuE,IAAzCrE,EAAwC,EAAxCA,SAAwC,EACjDC,qBAAW2D,EAAc,CACjD,CACEK,GAAI,EACJxB,KAAM,oBACN0B,MAAM,GAER,CACEF,GAAI,EACJxB,KAAM,mBACN0B,MAAM,GAER,CACEF,GAAI,EACJxB,KAAM,kCACN0B,MAAM,KAfiE,mBACpEG,EADoE,KAC7DnE,EAD6D,KAmB3E,OACE,kBAACwD,EAAoBvD,SAArB,CAA8BC,MAAOF,GACnC,kBAACuD,EAAiBtD,SAAlB,CAA2BC,MAAOiE,GAAQtE,IAOzC,SAASuE,IACd,IAAM5E,EAAQY,qBAAWmD,GACzB,IAAK/D,EAAO,MAAM,IAAIG,MAAM,2BAC5B,OAAOH,ECxET,IAGe6E,EAHe,SAAC,GAAa,IAAZ7D,EAAW,EAAXA,MAC9B,OAAO,4BAAKA,I,qECgBC8D,MAjBf,WAEgBF,IAAd,IACMpE,EF0ED,WACL,IAAMA,EAAWI,qBAAWoD,GAC5B,IAAKxD,EAAU,MAAM,IAAIL,MAAM,2BAC/B,OAAOK,EE7EUuE,GAHJ,EAKa7D,mBAAS,IALtB,mBAKNR,EALM,KAKC4C,EALD,KAUb,OACE,kBAAC,EAAD,KACE,2BAAOpD,KAAK,OAAO8B,KAAK,QAAQgD,YAAY,uCAASC,SAAU,SAAAC,GAAC,OAAI5B,EAAS4B,EAAEC,OAAOzE,UACtF,4BAAQ6B,QANI,SAAC2C,GACf1E,EAAS,CAACN,KAAM,SAAU4C,KAAMpC,MAK9B,kBAMA4B,EAAUY,IAAOkC,IAAV,KCeEC,EA1Be,SAAC,GAAmB,IAAlBrD,EAAiB,EAAjBA,KAAiB,EAAXhB,MACpCwB,QAAQC,IAAIT,GACZ,IAAMhC,EAAQ4E,IACdpC,QAAQC,IAAIzC,GACZsF,MAAM,gDACHtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAwC,GAAI,OAAIhD,QAAQC,IAAI+C,MAY5B,OACE,kBAAC,IAAMnE,SAAP,KACE,kBAAC,EAAD,MAXKrB,EAAMsB,KAAI,SAACmE,EAAMlE,GACtB,OACE,wBAAIC,IAAKD,GACP,4BAAKkE,EAAK3C,UAUd,kBAAC,EAAD,CAAM9B,MAAM,Q,qECVHqE,MAZf,WACE,OACE,kBAACX,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,4CACA,kBAAC,EAAD,CAAW1C,KAAK,UAAUhB,MAAM,iBAQpCsB,EAAUY,IAAOC,QAAV,K,i0BClBb,IA+CeuC,EA/CS,WAAM,MCAJ,SAACC,EAAc9B,GAAsB,MAEjCvD,sBAG5B,SAAiBsF,EAAa3F,GAC5B,OAAQA,EAAOC,MACb,IAAK,SACH,IAAMY,EAAI,eAAO8E,EAAP,GAAmB3F,EAAOa,MAEpC,YADiBjB,IAAb8F,GAA8C,oBAAbA,GAAyBA,EAAS7E,GAChE,eAAI8E,EAAX,GAAuB3F,EAAOa,MAChC,QACE,MAAM,IAAIX,MAAM,uBAV0B0D,GAAgB,IAFH,mBAEtD+B,EAFsD,KAE7CpF,EAF6C,KAgC7D,MAAO,CAACyE,SAhBS,SAACY,GAChBA,EAAMC,UACN,IAAIC,EAA6B,aAAtBF,EAAMV,OAAOjF,MAA8C,OAAvB2F,EAAMV,OAAOzE,MAAiBmF,EAAMV,OAAOa,QAAUH,EAAMV,OAAOzE,MACjH,IACE,GAA0B,KAAtBmF,EAAMV,OAAOnD,KAAa,KAAM,mBACpC,MAAOiE,GACP,OAAQA,GACN,IAAK,mBACHhD,MAAM,8EAIZ,IAAMiD,EAAK,eAAON,EAAP,eAAiBC,EAAMV,OAAOnD,KAAO+D,IAChDvF,EAAS,CAACN,KAAM,SAAUY,KAAK,eAAKoF,MAGpBN,WD9BUO,EAE5B,SAAgBC,OAFTR,EAFqB,EAErBA,QAASX,EAFY,EAEZA,SA0BhB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,qCACA,yBAAKvD,UAAU,WACb,2BAAO2E,QAAQ,MACb,oDACA,2BAAO/B,GAAG,KAAKpE,KAAK,OAAO8B,KAAK,KAAKiD,SAAUA,KAEjD,2BAAOoB,QAAQ,YACb,0DACA,2BAAO/B,GAAG,WAAWpE,KAAK,WAAW8B,KAAK,WAAWiD,SAAUA,KAEjE,4BAAQ1C,QA5BC,SAACsD,GAA2D,IAEpEvB,EAAgBsB,EAAhBtB,GAAIgC,EAAYV,EAAZU,SACNhC,EAIAgC,EAILrD,MAAMsD,KAAKC,UAAUZ,EAAS,KAAM,IAHlC3C,MAAM,sCAJNA,MAAM,wCAwBF,oBAQJX,GAAUY,IAAOC,QAAV,K,uEElDb,IAUesD,GAVgB,SAAC,GAAW,EAAVvG,KAE/B,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,yCAAewG,iBAOjBpE,GAAUY,IAAOC,QAAV,MCmBEwD,GA1BgB,SAAC,GAAwC,IAAvCzG,EAAsC,EAAtCA,KAAMkG,EAAgC,EAAhCA,KAAcQ,GAAkB,EAA1BC,OAA0B,EAAlBD,cAAkB,ECJ7C,SAACjB,EAAe9B,GAAsB,MAEpCvD,sBAO1B,SAAiBN,EAAYC,GAC3B,OAAQA,EAAOC,MACb,IAAK,SACH,IAAMY,EAAI,eAAOd,EAAP,GAAiBC,EAAOa,MAElC,YADiBjB,IAAb8F,GAA8C,oBAAbA,GAAyBA,EAAS7E,GAChE,eAAId,EAAX,GAAqBC,EAAOa,MAC9B,QACE,MAAM,IAAIX,MAAM,uBAdwB0D,GAFgB,mBAEvD7D,EAFuD,KAEhDQ,EAFgD,KA6B9D,MAAO,CAACyE,SAVS,SAACY,GAChBA,EAAMC,UACN,IAAIC,EAA6B,aAAtBF,EAAMV,OAAOjF,MAA8C,OAAvB2F,EAAMV,OAAOzE,MAAiBmF,EAAMV,OAAOa,QAAUH,EAAMV,OAAOzE,MAE3GwF,EAAK,eAAOlG,EAAP,eAAe6F,EAAMV,OAAOnD,KAAO+D,IAG9CvF,EAAS,CAACN,KAAM,SAAUY,KAAK,eAAKoF,MAGpBlG,SDxBQmG,EAK1B,SAAgB/E,GACdoB,QAAQC,IAAIrB,KAN+B,CAAC6D,SAAU,OAAjDjF,EAD8D,EAC9DA,MAAOiF,EADuD,EACvDA,SAQd,OACE,kBAAC,IAAM5D,SAAP,KACE,iCACE,6BACE,qCAAWnB,GACX,qCAAWkG,GACX,4BAAQ7D,QAASqE,GAAjB,gBAEA,2BAAO1G,KAAK,OAAO8B,KAAK,QAAQ6B,aAAa,2BAAOoB,SAAUA,IAC9D,2BAAO/E,KAAK,WAAW8B,KAAK,MAAMiD,SAAUA,KAE9C,4BAAQ1C,QAlBG,WACfC,QAAQC,IAAIzC,KAiBR,+BEHO8G,GAhBY,SAAAhF,GAQzB,OAJA4B,qBAAU,WACRlB,QAAQC,IAAI,QAIZ,kBAAC,EAAD,KACE,sCACA,kBAAC,EAAD,CAAOT,KAAK,aAAaC,KAAK,QCYrB8E,OAnBf,WAGE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAW9C,IACrC,kBAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,QAAQC,UAAWE,IACrC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWG,IACzC,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,OAAOC,UAAWI,KACpC,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,SAASC,UAAWK,IAEtC,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,SAASC,UAAWM,KACtC,kBAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,SAASC,UAAWO,QCtB/BvF,OAHf,WACE,OAAO,kBAAC,GAAD,O,YCITwF,IAASC,OACP,kBAAC,IAAD,CAAeZ,SAAUN,eACvB,kBAACtG,EAAD,KACE,kBAACW,EAAD,KACE,kBAAC,GAAD,SAIN8G,SAASC,eAAe,W","file":"static/js/main.f52ea951.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/typescript.3de182d2.svg\";","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\n//---------------------------------------------------------------------\n//type\ntype GlobalState = object | undefined | null\ntype Action = {type: 'CREATE'; title: string; name: any} | {type: 'UPDATE'; title: string; name: string} | {type: 'REMOVE'; title: string | null}\ntype GlobalDispatch = Dispatch<Action>\n//context\nconst stateContext = createContext<object | undefined>(undefined)\nconst dispatchContext = createContext<GlobalDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param {state}   : object\n * @param {action}  : action type\n */\nfunction globalReducer(state: GlobalState, action: Action): object {\n  switch (action.type) {\n    case 'CREATE':\n      return action\n    case 'UPDATE':\n      return {...state, ...action}\n    case 'REMOVE':\n      return {}\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n *  Provider\n */\nexport function GlobalContextProvider({children}: {children: React.ReactNode}) {\n  const defaultState = {\n    auth: 'sfdkjsdlfj43w43232423'\n  }\n  const [state, dispatch] = useReducer(globalReducer, defaultState)\n  return (\n    <dispatchContext.Provider value={dispatch}>\n      <stateContext.Provider value={state}>{children}</stateContext.Provider>\n    </dispatchContext.Provider>\n  )\n}\n/**\n *  useState\n *\n */\nexport function useGlobalState() {\n  const state = useContext(stateContext)\n  if (!state) throw new Error('useGlobalState not found')\n  return state\n}\n/**\n *  useDispatch\n */\nexport function useGlobalDispatch() {\n  const dispatch = useContext(dispatchContext)\n  if (!dispatch) throw new Error('useGlobalDispatch not found')\n  return dispatch\n}\n","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\n//---------------------------------------------------------------------\ntype PageState = {\n  title?: string | undefined\n  depth?: string[]\n}\ntype Action = {type: 'UPDATE'; info: object} | {type: 'REMOVE'; info: object}\ntype PageDispatch = Dispatch<Action>\nconst stateContext = createContext<object | undefined>(undefined)\nconst dispatchContext = createContext<PageDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param {state}   : object\n * @param {action}  : action type\n */\nfunction reducer(state: PageState, action: Action): object {\n  switch (action.type) {\n    case 'UPDATE':\n      return {...state, ...action.info}\n    case 'REMOVE':\n      return state\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n * @title Provider\n */\nexport function PageContextProvider({children}: {children: React.ReactNode}) {\n  const defaultState: any = {\n    title: 'title'\n  }\n  const [state, dispatch] = useReducer(reducer, defaultState)\n  return (\n    <dispatchContext.Provider value={dispatch}>\n      <stateContext.Provider value={state}>{children}</stateContext.Provider>\n    </dispatchContext.Provider>\n  )\n}\n/**\n * useState\n */\nexport function usePageState() {\n  const state = useContext(stateContext)\n  if (!state) throw new Error('usePageState not found')\n  return state\n}\n/**\n * useDispatch\n */\nexport function usePageDispatch() {\n  const dispatch = useContext(dispatchContext)\n  if (!dispatch) throw new Error('usePageDispatch not found')\n  return dispatch\n}\n","/*\n */\nimport React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\n//component\n//layout\n//type\ntype Navigation = {\n  title: string\n  link: string\n}\ntype Navigations = Navigation[]\n//---------------------------------------------------------------------\nfunction Navi() {\n  //const\n  const [data] = useState<Navigations>([\n    {title: 'Main', link: '/'},\n    {title: 'Login', link: '/login'},\n    {title: 'Guide', link: '/guide'},\n    {title: 'Hooks', link: '/hooks'},\n    {title: 'Todo', link: '/todo'},\n    {title: 'Button', link: '/button'},\n    {title: 'Form', link: '/form'},\n    {title: 'markdown', link: '/markdown'}\n  ])\n  //makeObject\n  const makeNavi = (): JSX.Element[] => {\n    return data.map(({title, link}: Navigation, index) => {\n      return (\n        <dl key={index}>\n          <dt>\n            <Link to={link}>{title}</Link>\n          </dt>\n        </dl>\n      )\n    })\n  }\n  return <React.Fragment>{makeNavi()}</React.Fragment>\n}\nexport default Navi\n//---------------------------------------------------------------------\n","/*\n */\nimport React from 'react'\n//component\n//layout\nimport Navi from './navi'\n//static\nimport Logo from 'static/svg/typescript.svg'\n\nexport default () => {\n  //initalize\n  //-----------------------------------------------------\n  return (\n    <header>\n      <div className=\"logo\">\n        <img src={Logo} />\n        <span>Typescript</span>\n      </div>\n      <Navi />\n      <footer>\n        <a href=\"mailto:yeshtml5@gmail.com\">mail: yeshtml5@gmail.com</a>\n        <a href=\"https://github.com/yeshtml5/typescript\">github: github.com/yeshtml5/typescript</a>\n        <p>\n          © 2020 Yeshtml5, <br />\n          ALL RIGHTS RESERVED.\n        </p>\n      </footer>\n    </header>\n  )\n}\n","/*\n * @example https://dashboard.zawiastudio.com/demo/home-overview.html\n */\nimport React from 'react'\n//component\n//layout\nimport Header from './content/header'\n//\nexport default (props: any) => {\n  //initalize\n  const {children} = props\n  //---------------------------------------------------------------------\n  return (\n    <main>\n      <Header />\n      <article>{children}</article>\n    </main>\n  )\n}\n","import React from 'react'\n\ntype GreetingsProps = {\n  name: string\n  mark: string\n}\n\nfunction Greetings({name, mark}: GreetingsProps) {\n  return (\n    <div>\n      Hello, {name} {mark}\n    </div>\n  )\n}\n\nGreetings.defaultProps = {\n  mark: '!'\n}\n\nexport default Greetings\n","/**\n * @title\n */\nimport React from 'react'\nimport styled from 'styled-components'\n//components\nimport Layout from 'pages/common/layout/'\nimport {useGlobalState, useGlobalDispatch} from 'contexts/global'\nimport Greetings from 'pages/guide/typescript'\n//context\n\nconst App: React.FC = () => {\n  //context\n  const global = useGlobalState()\n  const dispatch = useGlobalDispatch()\n  //initalize\n  //useState\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <Greetings name=\"wanhwi\" mark=\"$\" />\n      <Content>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'REMOVE', title: 'name'})\n            }}>\n            'REMOVE'\n          </button>\n        </p>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'CREATE', title: 'hey ', name: 1111})\n            }}></button>\n        </p>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'UPDATE', title: 'UPDATE ', name: 'react'})\n            }}>\n            'UPDATE1'\n          </button>\n        </p>\n\n        <button\n          onClick={() => {\n            console.log(global)\n          }}>\n          확인\n        </button>\n        <h1>Todo 컴포넌트 제작중</h1>\n        <div>test</div>\n        <div>\n          <button\n            onClick={() => {\n              let newVariable = window.navigator as any\n              if (newVariable.share) {\n                newVariable\n                  .share({\n                    title: '공유하기 예제',\n                    text: '고별 지루하기 짝이없는 명제들 그래도 그것은 진실',\n                    url: 'https://naver.com'\n                  })\n                  .then(() => alert('공유하기'))\n              } else {\n                alert('share not supported')\n              }\n            }}>\n            webShare\n          </button>\n        </div>\n        {/* <counter startCount={3} /> */}\n      </Content>\n    </Layout>\n  )\n}\nexport default App\n//---------------------------------------------------------------------\n\nconst Content = styled.section`\n  p {\n    margin-bottom: 10px;\n  }\n  button {\n    display: inline-block;\n    padding: 10px;\n    font-size: 16px;\n    color: #ff0000;\n    background: #111;\n  }\n`\n","/**\n * @title\n */\nimport React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport useForm from 'react-hook-form'\n//components\nimport Layout from '../common/layout'\nimport {useGlobalState} from 'contexts/global'\n//\n\nconst App: React.FC = props => {\n  const global = useGlobalState()\n\n  //---------------------------------------------------------------------\n  type FormData = {\n    firstName: string\n    lastName: string\n    age: number\n  }\n  //initalize\n  //useState\n\n  const {register, setValue, handleSubmit} = useForm<FormData>()\n  const onSubmit = handleSubmit(data => {\n    console.log(typeof data.age)\n  })\n  //---------------------------------------------------------------------\n  useEffect(() => {\n    console.log(global)\n  }, [])\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <Form>\n        <form onSubmit={onSubmit}>\n          <div>\n            <label>First Name</label>\n            <input name=\"firstName\" ref={register} defaultValue={'first'} />\n          </div>\n          <div>\n            <label>Last Name</label>\n            <input\n              name=\"lastName\"\n              ref={register}\n              // onChange={e => {\n              //   console.log(e.target.value)\n              // }}\n            />\n          </div>\n          <div>\n            <label>Age</label>\n            <input name=\"age\" type=\"number\" ref={register({required: true})} />\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setValue('age', 222)\n                setValue('lastName', 'luo')\n              }}>\n              SetValue\n            </button>\n            <button type=\"submit\">submit</button>\n          </div>\n        </form>\n      </Form>\n    </Layout>\n  )\n}\nexport default App\n//----------------------------------------------------------\nconst Form = styled.section`\n  form {\n    > div {\n      display: block;\n      margin-bottom: 1rem;\n    }\n    label,\n    input,\n    button {\n      display: inline-block;\n      padding: 1rem 2rem;\n      color: #111;\n      font-size: 16px;\n    }\n    button {\n      color: #fff;\n      background: #111;\n    }\n    input {\n      background: #e1e1e1;\n    }\n  }\n`\n","/**\n * @title\n */\nimport React from \"react\";\n//components\nimport Layout from \"../../common/layout\";\n//\n\nconst App: React.FC = () => {\n  //---------------------------------------------------------------------\n  //initalize\n  //useState\n\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <h1>타이틀</h1>\n      <h1>타이틀</h1>\n      <p>2212121</p>\n    </Layout>\n  );\n};\nexport default App;\n","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\nexport type Todo = {\n  id: number\n  text: string\n  done: boolean\n}\nexport type TodoState = Todo[]\n//---------------------------------------------------------------------\ntype Action = {type: 'CREATE'; text: string} | {type: 'TOGGLE'; id: number} | {type: 'REMOVE'; id: number}\ntype TodoDispatch = Dispatch<Action>\nconst TodoStateContext = createContext<TodoState | undefined>(undefined)\nconst TodoDispatchContext = createContext<TodoDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param state\n * @param action\n */\n\nfunction todosReducer(state: TodoState, action: Action): TodoState {\n  switch (action.type) {\n    case 'CREATE':\n      const nextId = Math.max(...state.map(todo => todo.id)) + 1\n      return state.concat({\n        id: nextId,\n        text: action.text,\n        done: false\n      })\n    case 'TOGGLE':\n      return state.map(todo => (todo.id === action.id ? {...todo, done: !todo.done} : todo))\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id)\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n * @title Provider\n */\nexport function TodoContextProvider({children}: {children: React.ReactNode}) {\n  const [todos, dispatch] = useReducer(todosReducer, [\n    {\n      id: 1,\n      text: 'Learn Context API',\n      done: true\n    },\n    {\n      id: 2,\n      text: 'Learn TypeScript',\n      done: true\n    },\n    {\n      id: 3,\n      text: 'Use Context API with TypeScript',\n      done: false\n    }\n  ])\n\n  return (\n    <TodoDispatchContext.Provider value={dispatch}>\n      <TodoStateContext.Provider value={todos}>{children}</TodoStateContext.Provider>\n    </TodoDispatchContext.Provider>\n  )\n}\n/**\n * useState\n */\nexport function useTodoState() {\n  const state = useContext(TodoStateContext)\n  if (!state) throw new Error('TodosProvider not found')\n  return state\n}\n/**\n * useDispatch\n */\nexport function useTodoDispatch() {\n  const dispatch = useContext(TodoDispatchContext)\n  if (!dispatch) throw new Error('TodosProvider not found')\n  return dispatch\n}\n","import React from 'react'\n\ninterface Props {\n  title: string\n}\nconst List: React.FC<Props> = ({title}) => {\n  return <h1>{title}</h1>\n}\nexport default List\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\n//context\nimport {useTodoState, useTodoDispatch} from '../context'\n\nfunction Add() {\n  //context\n  const state = useTodoState()\n  const dispatch = useTodoDispatch()\n  //useState\n  const [value, setValue] = useState('')\n  //---------------------------------------------------------------------\n  const addTodo = (e: React.MouseEvent): void => {\n    dispatch({type: 'CREATE', text: value})\n  }\n  return (\n    <Content>\n      <input type=\"text\" name=\"title\" placeholder=\"입력해주세요\" onChange={e => setValue(e.target.value)} />\n      <button onClick={addTodo}>클릭</button>\n    </Content>\n  )\n}\nexport default Add\n//---------------------------------------------------------------------\nconst Content = styled.div``\n","import React from 'react'\n//context\nimport {useTodoState} from '../context'\n//conent\nimport List from './list'\nimport Add from './add'\n\n//type\ntype Index = {\n  name: string\n  title: string\n}\n\nconst Todo: React.FC<Index> = ({name, title}) => {\n  console.log(name)\n  const state = useTodoState()\n  console.log(state)\n  fetch('https://jsonplaceholder.typicode.com/todos/1')\n    .then(response => response.json())\n    .then(json => console.log(json))\n  //makeList()\n  const makeList = () => {\n    return state.map((list, index) => {\n      return (\n        <dl key={index}>\n          <dt>{list.text}</dt>\n        </dl>\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Add />\n      {makeList()}\n      <List title=\"d\"></List>\n    </React.Fragment>\n  )\n}\nexport default Todo\n","/**\n *  @title Todo\n *\n */\nimport React from 'react'\nimport styled from 'styled-components'\n//context\nimport {TodoContextProvider} from './context'\n//layout\nimport Layout from 'pages/common/layout'\n//content\nimport TodoIndex from './content/index'\n\nfunction Todo() {\n  return (\n    <TodoContextProvider>\n      <Layout>\n        <Content>\n          <h1>Todo example</h1>\n          <TodoIndex name=\"my_name\" title=\"my_title\" />\n        </Content>\n      </Layout>\n    </TodoContextProvider>\n  )\n}\nexport default Todo\n//---------------------------------------------------------------------\nconst Content = styled.section``\n","import React from 'react'\nimport styled from 'styled-components'\n//layout\nimport Layout from 'pages/common/layout'\n//hooks\nimport {useChanges} from 'components/hooks/useHooks'\n\n//type\n\nconst Login: React.FC = () => {\n  //hooks\n  const {changes, onChange} = useChanges(update)\n  //function\n  function update(mode: any) {\n    //console.log(mode.password)\n    // switch (true) {\n    //   case mode.onChange !== undefined:\n    //     console.log(mode)\n    //     break\n    // }\n  }\n  //submit\n  const onSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    //validation\n    const {id, password} = changes\n    if (!id) {\n      alert('id가 없습니다.')\n      return\n    }\n    if (!password) {\n      alert('password 없습니다.')\n      return\n    }\n    alert(JSON.stringify(changes, null, 1))\n  }\n\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <Content>\n        <h1>Login</h1>\n        <div className=\"in_wrap\">\n          <label htmlFor=\"id\">\n            <span>아이디</span>\n            <input id=\"id\" type=\"text\" name=\"id\" onChange={onChange} />\n          </label>\n          <label htmlFor=\"password\">\n            <span>패스워드</span>\n            <input id=\"password\" type=\"password\" name=\"password\" onChange={onChange} />\n          </label>\n          <button onClick={onSubmit}>전송</button>\n        </div>\n      </Content>\n    </Layout>\n  )\n}\nexport default Login\n//---------------------------------------------------------------------\nconst Content = styled.section`\n  h1 {\n    position: relative;\n    display: block;\n    padding-bottom: 10px;\n    &:after {\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      width: 100%;\n      height: 1px;\n      background: #ccc;\n      content: '';\n    }\n  }\n  .in_wrap {\n    display: block;\n    width: 80%;\n    padding: 50px 0;\n    label {\n      display: block;\n      margin-bottom: 10px;\n      span {\n        display: inline-block;\n        width: 80px;\n      }\n    }\n    button {\n      display: block;\n      width: 100%;\n      padding: 10px;\n      color: #fff;\n      background: #111;\n    }\n  }\n  input {\n    display: inline-block;\n    min-width: 200px;\n    padding: 10px 10px;\n    border: 1px solid #111;\n  }\n  min-height: 100px;\n`\n","import React, {useReducer} from 'react'\n\n//type\ntype Action = {type: 'UPDATE'; info: object}\n/**\n * @function onChange 이벤트에 key:value state관리\n * @param callback\n * @param defaultValue\n */\nexport const useChanges = (callback: {}, defaultValue?: {}) => {\n  //useReducer\n  const [changes, dispatch] = useReducer(reducer, defaultValue || {})\n  //---------------------------------------------------------------------\n  //reducer\n  function reducer(changes: {}, action: Action): any {\n    switch (action.type) {\n      case 'UPDATE':\n        const info = {...changes, ...action.info}\n        if (callback !== undefined && typeof callback === 'function') callback(info)\n        return {...changes, ...action.info}\n      default:\n        throw new Error('Unhandled action')\n    }\n  }\n  //onChange\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.persist()\n    let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n    try {\n      if (event.target.name === '') throw 'target.name.null'\n    } catch (err) {\n      switch (err) {\n        case 'target.name.null':\n          alert('name값이 정의되지 않았습니다.')\n          break\n      }\n    }\n    const _info = {...changes, [event.target.name]: _val}\n    dispatch({type: 'UPDATE', info: {..._info}})\n  }\n\n  return {onChange, changes}\n}\n//---------------------------------------------------------------------\n","import React from 'react'\nimport styled from 'styled-components'\n//content\nimport Layout from 'pages/common/layout'\n//interface\ninterface Props {\n  type: string\n}\nconst Guide: React.FC<Props> = ({type}) => {\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <Content>\n        <h1>NODE_ENV: {process.env.NODE_ENV + ''}</h1>\n      </Content>\n    </Layout>\n  )\n}\nexport default Guide\n//---------------------------------------------------------------------\nconst Content = styled.section``\n","import React from 'react'\n//hooks\nimport {useChanges} from 'components/hooks/useChanges'\n//layout\n//interface\ninterface Type {\n  mode: string\n}\ninterface Props extends Type {\n  type: string\n  method(): any\n  clickHandler?: (event: React.MouseEvent) => void\n}\nconst Hooks: React.FC<Props> = ({type, mode, method, clickHandler}) => {\n  const {state, onChange} = useChanges(update, {onChange: '-1'})\n  const btnClick = () => {\n    console.log(state)\n  }\n  //hooks\n  function update(data: any) {\n    console.log(data)\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <div>\n          <h1>type: {type}</h1>\n          <h1>mode: {mode}</h1>\n          <button onClick={clickHandler}>버튼</button>\n\n          <input type=\"text\" name=\"title\" defaultValue=\"값을입력\" onChange={onChange} />\n          <input type=\"checkbox\" name=\"box\" onChange={onChange} />\n        </div>\n        <button onClick={btnClick}>버튼클릭</button>\n      </section>\n    </React.Fragment>\n  )\n}\n\nexport default Hooks\n","import React, {useReducer} from 'react'\ninterface DefaultValue {\n  callback: () => {}\n  title: string\n  //changes?: {key: string}\n}\n//type\ntype Action = {type: 'UPDATE'; info: object}\n\nexport const useChanges = (callback: any, defaultValue: any) => {\n  //reducer\n  const [state, dispatch] = useReducer(reducer, defaultValue)\n  //state\n  /**\n   * reducer\n   * @param {state}   : object\n   * @param {action}  : action type\n   */\n  function reducer(state: any, action: Action): object {\n    switch (action.type) {\n      case 'UPDATE':\n        const info = {...state, ...action.info}\n        if (callback !== undefined && typeof callback === 'function') callback(info)\n        return {...state, ...action.info}\n      default:\n        throw new Error('Unhandled action')\n    }\n  }\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.persist()\n    let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n\n    const _info = {...state, [event.target.name]: _val}\n\n    // setChanges({...changes, [event.target.name]: event.target.value})\n    dispatch({type: 'UPDATE', info: {..._info}})\n  }\n\n  return {onChange, state}\n}\n\n/**\n * @title\n *\n *\n * \n//import\nimport useChange from 'components/hooks/useChange'\n\n//hooks\nconst {changes, setChanges, onChange} = useChange(update, {onChange: -1})\n\n//update\nfunction update(mode) {\n  switch (true) {\n    case mode.onChange !== undefined:\n      console.log(JSON.stringify(changes))\n      break\n  }\n}\n\n//jsx\n<input placeholder=\"TEST\" name=\"test1\" onChange={onChange} />\n<input name=\"part\" data-type=\"number\" type=\"radio\" value=\"false\" onChange={onChange} />\n<input name=\"part\" data-type=\"boolean\" type=\"radio\" value=\"true\" onChange={onChange} />\n<input type=\"checkbox\" data-type=\"array\" name=\"age\" value={[10, 11, 12, 13, 14]} onChange={onChange} /> 10대\n */\n\n// import {useCallback, useEffect, useState} from 'react'\n// //\n// const useChange = (callback, defaultValue) => {\n//   //---------------------------------------------------------------------\n//   const [changes, setChanges] = useState({...defaultValue})\n//   //---------------------------------------------------------------------\n//   const onChange = useCallback(event => {\n//     if (event === undefined) {\n//       return\n//     }\n//     event.persist()\n//     let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n//     /**\n//      * @example data-type에 맞춰사 강제 형변환을 할수있다.\n//      */\n//     if (event.target.dataset.type !== undefined && event.target.dataset.type !== '') {\n//       if (event.target.dataset.type.indexOf('number') !== -1) _val = parseInt(_val)\n//       if (event.target.dataset.type.indexOf('boolean') !== -1) _val = _val === 'true' ? true : false\n//       if (event.target.dataset.type.indexOf('checked') !== -1) _val = event.target.checked\n//       //\n//       if (event.target.dataset.type.indexOf('array') !== -1) {\n//         const _ary = changes[event.target.name]\n//         switch (event.target.checked) {\n//           case true: //--------------------------------------------checked\n//             _val = _ary === undefined || _ary === null ? [_val] : _ary.concat(_val)\n//             break\n//           case false: //-------------------------------------------unchecked\n//             if (_ary === undefined || _ary === null) return\n//             _val = _ary.filter(ele => ele !== _val)\n//             break\n//         }\n//       }\n//     }\n//     //예외처리\n//     if (_val === 'null') _val = null\n//     setChanges(changes => ({...changes, [event.target.name]: _val, ['last_changes']: event.target.name}))\n//   })\n//   //---------------------------------------------------------------------\n//   useEffect(() => {\n//     if (callback !== undefined && typeof callback === 'function') callback(changes)\n//   }, [changes])\n//   return {onChange, setChanges, changes}\n// }\n// export default useChange\n","/**\n * @title\n */\nimport React, {useEffect} from 'react'\n//components\nimport Layout from 'pages/common/layout'\nimport Guide from 'pages/guide/typescript'\n//\ninterface Tab {\n  data: object\n  onClick: Function\n}\n\n//---------------------------------------------------------------------\nconst Tab: React.FC<Tab> = props => {\n  //---------------------------------------------------------------------\n  //initalize\n  //useState\n  useEffect(() => {\n    console.log('1')\n  })\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <h1>탭</h1>\n      <Guide name=\"wanhwi.son\" mark=\"A\" />\n    </Layout>\n  )\n}\n\nexport default Tab\n","/**\n * @title\n */\nimport React from 'react'\nimport {Route, Switch, HashRouter} from 'react-router-dom'\n//components\n//Page\nimport main from 'pages/main'\nimport form from 'pages/form'\nimport markdown from 'pages/modules/markdown'\nimport todo from 'pages/modules/todo'\nimport login from 'pages/login'\n//guide\nimport guide from 'pages/guide'\nimport hooks from 'pages/guide/hooks'\n/*ui*/\nimport tab from './pages/ui/tab'\n//---------------------------------------------------------------------\nfunction Router() {\n  //initalize\n  //---------------------------------------------------------------------\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={main} />\n        <Route exact path=\"/todo\" component={todo} />\n        <Route exact path=\"/form\" component={form} />\n        <Route exact path=\"/markdown\" component={markdown} />\n        <Route exact path=\"/tab\" component={tab} />\n        <Route exact path=\"/login\" component={login} />\n        {/* 가이드 */}\n        <Route exact path=\"/guide\" component={guide} />\n        <Route exact path=\"/hooks\" component={hooks} />\n      </Switch>\n    </HashRouter>\n  )\n}\nexport default Router\n","/**\n * @title\n */\nimport React from 'react'\n//router\nimport Router from 'router'\n//---------------------------------------------------------------------\nfunction App() {\n  return <Router />\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n//contexts\nimport {GlobalContextProvider} from 'contexts/global'\nimport {PageContextProvider} from 'contexts/page'\n//App\nimport App from './App'\n//style\nimport './styles/common.scss'\nimport './styles/layout.scss'\n//---------------------------------------------------------------------\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <GlobalContextProvider>\n      <PageContextProvider>\n        <App />\n      </PageContextProvider>\n    </GlobalContextProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}