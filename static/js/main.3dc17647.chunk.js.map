{"version":3,"sources":["static/svg/typescript.svg","contexts/global.tsx","contexts/page.tsx","pages/common/layout/content/navi.tsx","pages/common/layout/content/header.tsx","pages/common/layout/index.tsx","pages/main/presenter.tsx","pages/main/container.tsx","pages/login/presenter.tsx","components/hooks/useHooks.ts","pages/login/container.tsx","constpack/env/index.ts","components/hooks/useChanges.ts","pages/guide/store.ts","pages/guide/hooks/index.tsx","pages/guide/index.tsx","pages/search/presenter.tsx","pages/search/container.tsx","lib/routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","stateContext","createContext","undefined","dispatchContext","globalReducer","state","action","type","Error","GlobalContextProvider","children","useReducer","auth","dispatch","Provider","value","reducer","info","PageContextProvider","title","Navi","useState","link","data","Fragment","map","index","key","to","className","src","Logo","href","icon","faEnvelope","target","faGithub","faCamera","Presenter","global","useContext","useGlobalState","useGlobalDispatch","Content","onClick","name","console","log","newVariable","window","navigator","share","text","url","then","alert","styled","section","Container","onUpdate","onSubmit","refId","useRef","refPassword","callback","defaultValue","changes","onChange","event","persist","_val","checked","err","_info","useChanges","htmlFor","ref","id","loginInfo","setLoginInfo","firebase","initializeApp","useGuideStore","createGlobalState","Hooks","mode","clickHandler","method","setValue","Guide","match","params","JSON","stringify","makeContents","useGeolocation","useKey","placeholder","Router","basename","exact","path","component","Pages","App","ReactDOM","render","process","document","getElementById"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,wC,gLCarCC,EAAeC,6BAAkCC,GACjDC,EAAkBF,6BAA0CC,GAOlE,SAASE,EAAcC,EAAoBC,GACzC,OAAQA,EAAOC,MACb,IAAK,SACH,OAAOD,EACT,IAAK,SACH,OAAO,eAAID,EAAX,GAAqBC,GACvB,IAAK,SACH,MAAO,GACT,QACE,MAAM,IAAIE,MAAM,qBAOf,SAASC,EAAT,GAAyE,IAAzCC,EAAwC,EAAxCA,SAAwC,EAInDC,qBAAWP,EAHhB,CACnBQ,KAAM,8BAFqE,mBAItEP,EAJsE,KAI/DQ,EAJ+D,KAK7E,OACE,kBAACV,EAAgBW,SAAjB,CAA0BC,MAAOF,GAC/B,kBAACb,EAAac,SAAd,CAAuBC,MAAOV,GAAQK,IC9B5C,IAAMV,EAAeC,6BAAkCC,GACjDC,EAAkBF,6BAAwCC,GAOhE,SAASc,EAAQX,EAAkBC,GACjC,OAAQA,EAAOC,MACb,IAAK,SACH,OAAO,eAAIF,EAAX,GAAqBC,EAAOW,MAC9B,IAAK,SACH,OAAOZ,EACT,QACE,MAAM,IAAIG,MAAM,qBAOf,SAASU,EAAT,GAAuE,IAAzCR,EAAwC,EAAxCA,SAAwC,EAIjDC,qBAAWK,EAHX,CACxBG,MAAO,UAFkE,mBAIpEd,EAJoE,KAI7DQ,EAJ6D,KAK3E,OACE,kBAAC,EAAgBC,SAAjB,CAA0BC,MAAOF,GAC/B,kBAAC,EAAaC,SAAd,CAAuBC,MAAOV,GAAQK,I,WCL7BU,MA3Bf,WAAgB,MAECC,mBAAsB,CACnC,CAACF,MAAO,OAAQG,KAAM,KACtB,CAACH,MAAO,QAASG,KAAM,UACvB,CAACH,MAAO,SAAUG,KAAM,WACxB,CAACH,MAAO,QAASG,KAAM,UACvB,CAACH,MAAO,QAASG,KAAM,kBALlBC,EAFO,oBAyBd,OAAO,kBAAC,IAAMC,SAAP,KAVED,EAAKE,KAAI,WAA4BC,GAAW,IAArCP,EAAoC,EAApCA,MAAOG,EAA6B,EAA7BA,KACvB,OACE,wBAAIK,IAAKD,GACP,4BACE,kBAAC,IAAD,CAAME,GAAIN,GAAOH,U,yCCvBd,aAEb,OACE,gCACE,yBAAKU,UAAU,QACb,yBAAKC,IAAKC,MACV,6CAEF,kBAAC,EAAD,MACA,gCACE,uBAAGC,KAAK,6BACN,kBAAC,IAAD,CAAiBC,KAAMC,OAEzB,uBAAGF,KAAK,yCAAyCG,OAAO,UACtD,kBAAC,IAAD,CAAiBF,KAAMG,OAEzB,uBAAGJ,KAAK,iCAAiCG,OAAO,UAC9C,kBAAC,IAAD,CAAiBF,KAAMI,OAEzB,iDAEE,6BAFF,2BCnBO,cAAwB,IAAtB3B,EAAqB,EAArBA,SACf,OACE,8BACE,kBAAC,EAAD,MACA,iCAAUA,K,8PC6DD4B,MAhEf,WAEE,IAAMC,EL0CD,WACL,IAAMlC,EAAQmC,qBAAWxC,GACzB,IAAKK,EAAO,MAAM,IAAIG,MAAM,4BAC5B,OAAOH,EK7CQoC,GACT5B,ELiDD,WACL,IAAMA,EAAW2B,qBAAWrC,GAC5B,IAAKU,EAAU,MAAM,IAAIL,MAAM,+BAC/B,OAAOK,EKpDU6B,GAGjB,OACE,kBAAC,EAAD,KACE,kBAACC,EAAD,KACE,2BACE,4BACEC,QAAS,WACP/B,EAAS,CAACN,KAAM,SAAUY,MAAO,WAFrC,aAOF,2BACE,4BACEyB,QAAS,WACP/B,EAAS,CAACN,KAAM,SAAUY,MAAO,OAAQ0B,KAAM,WAGrD,2BACE,4BACED,QAAS,WACP/B,EAAS,CAACN,KAAM,SAAUY,MAAO,UAAW0B,KAAM,YAFtD,cAQF,4BACED,QAAS,WACPE,QAAQC,IAAIR,KAFhB,gBAMA,gFACA,qCACA,6BACE,4BACEK,QAAS,WACP,IAAII,EAAcC,OAAOC,UACrBF,EAAYG,MACdH,EACGG,MAAM,CACLhC,MAAO,wCACPiC,KAAM,uIACNC,IAAK,sBAENC,MAAK,kBAAMC,MAAM,+BAEpBA,MAAM,yBAZZ,gBAyBJZ,EAAUa,IAAOC,QAAV,KCvEE,SAASC,IACtB,OAAO,kBAAC,EAAD,M,s0BCyDMpB,MApDf,YAAiD,IAA7BqB,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,SAEtBC,EAAQC,iBAAyB,MACjCC,EAAcD,iBAAyB,MAHC,ECAtB,SAACE,EAAcC,GAAsB,MAEjCtD,sBAG5B,SAAiBuD,EAAa5D,GAC5B,OAAQA,EAAOC,MACb,IAAK,SACH,IAAMU,EAAI,eAAOiD,EAAP,GAAmB5D,EAAOW,MAEpC,YADiBf,IAAb8D,GAA8C,oBAAbA,GAAyBA,EAAS/C,GAChE,eAAIiD,EAAX,GAAuB5D,EAAOW,MAChC,QACE,MAAM,IAAIT,MAAM,uBAV0ByD,GAAgB,IAFH,mBAEtDC,EAFsD,KAE7CrD,EAF6C,KAgC7D,MAAO,CAACsD,SAhBS,SAACC,GAChBA,EAAMC,UACN,IAAIC,EAA6B,aAAtBF,EAAMjC,OAAO5B,MAA8C,OAAvB6D,EAAMjC,OAAOpB,MAAiBqD,EAAMjC,OAAOoC,QAAUH,EAAMjC,OAAOpB,MACjH,IACE,GAA0B,KAAtBqD,EAAMjC,OAAOU,KAAa,KAAM,mBACpC,MAAO2B,GACP,OAAQA,GACN,IAAK,mBACHjB,MAAM,8EAIZ,IAAMkB,EAAK,eAAOP,EAAP,eAAiBE,EAAMjC,OAAOU,KAAOyB,IAChDzD,EAAS,CAACN,KAAM,SAAUU,KAAK,eAAKwD,MAGpBP,WD5BUQ,CAAWf,GAAvBQ,GAJ8B,EAIvCD,QAJuC,EAI9BC,UA6BhB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,qCACA,yBAAKtC,UAAU,WACb,2BAAO8C,QAAQ,MACb,oDACA,2BAAOC,IAAKf,EAAOgB,GAAG,KAAKtE,KAAK,OAAOsC,KAAK,KAAKsB,SAAUA,KAE7D,2BAAOQ,QAAQ,YACb,0DACA,2BAAOC,IAAKb,EAAac,GAAG,WAAWtE,KAAK,WAAWsC,KAAK,WAAWsB,SAAUA,KAEnF,4BAAQvB,QAASgB,GAAjB,oBAQJjB,EAAUa,IAAOC,QAAV,K,sBErDE,SAASC,IAAY,MAEArC,mBAAS,MAFT,mBAE3ByD,EAF2B,KAEhBC,EAFgB,KA4BlC,OAAO,kBAAC,EAAD,CAAWpB,SAzBD,SAAApC,GAEfwD,EAAaxD,IAuBuBqC,SArBrB,SAAAQ,GACftB,QAAQC,IAAI+B,GACZhC,QAAQC,IAAIqB,M,OAXhBY,EAASC,cCPsB,ICQxB,I,QCFMC,EAAgBC,YAAyB,CAAChE,MAAO,S,sLCmC/CiE,MA5Bf,YAA2D,IAA3C7E,EAA0C,EAA1CA,KAAM8E,EAAoC,EAApCA,KAAcC,GAAsB,EAA9BC,OAA8B,EAAtBD,cAAsB,EAC9BJ,IAD8B,mBACjDnE,EADiD,KAC1CyE,EAD0C,OFLhC,SAACxB,EAAeC,GAAsB,MAEpCtD,sBAO1B,SAAiBN,EAAYC,GAC3B,OAAQA,EAAOC,MACb,IAAK,SACH,IAAMU,EAAI,eAAOZ,EAAP,GAAiBC,EAAOW,MAElC,YADiBf,IAAb8D,GAA8C,oBAAbA,GAAyBA,EAAS/C,GAChE,eAAIZ,EAAX,GAAqBC,EAAOW,MAC9B,QACE,MAAM,IAAIT,MAAM,uBAdwByD,GAFgB,mBAEvD5D,EAFuD,KAEhDQ,EAFgD,KA6B9D,MAAO,CAACsD,SAVS,SAACC,GAChBA,EAAMC,UACN,IAAIC,EAA6B,aAAtBF,EAAMjC,OAAO5B,MAA8C,OAAvB6D,EAAMjC,OAAOpB,MAAiBqD,EAAMjC,OAAOoC,QAAUH,EAAMjC,OAAOpB,MAE3G0D,EAAK,eAAOpE,EAAP,eAAe+D,EAAMjC,OAAOU,KAAOyB,IAG9CzD,EAAS,CAACN,KAAM,SAAUU,KAAK,eAAKwD,MAGpBpE,SEtBQqE,EAK1B,SAAgBnD,GACduB,QAAQC,IAAIxB,KAN+B,CAAC4C,SAAU,OAAjD9D,EAFiD,EAEjDA,MAAO8D,EAF0C,EAE1CA,SAQd,OACE,kBAAC,EAAD,KACE,6BACE,4BAAQvB,QAAS,kBAAM4C,EAAS,eAAIzE,EAAL,CAAYR,KAAM,aAAjD,4BACA,4BAAQqC,QAAS,kBAAM4C,EAAS,eAAIzE,EAAL,CAAYR,KAAM,WAAjD,OACA,4BAAQqC,QAAS,kBAAM4C,EAAS,CAACjF,KAAM,SAAvC,UAEA,qCAAWA,GACX,qCAAW8E,GACX,4BAAQzC,QAAS0C,GAAjB,gBACA,2BAAO/E,KAAK,OAAOsC,KAAK,QAAQoB,aAAa,2BAAOE,SAAUA,IAC9D,2BAAO5D,KAAK,WAAWsC,KAAK,MAAMsB,SAAUA,KAE9C,4BAAQvB,QApBK,WACfE,QAAQC,IAAI1C,KAmBV,8BAOAsC,EAAUa,IAAOC,QAAV,K,iICTEgC,MAlBf,YAAsC,IAAtBC,EAAqB,EAArBA,MAAqB,KAAdnF,KACL2E,KAATnE,EAD4B,oBAE5B8D,EAAMa,EAAMC,OAAZd,GASP,OACE,kBAAC,EAAD,KACE,2BAAIe,KAAKC,UAAU9E,IACnB,kBAAC,EAAD,KAXiB,WAAwB,IAAvBsE,EAAsB,uDAAP,GACnC,QAAQ,GACN,IAAc,UAATA,EACH,OAAO,kBAAC,EAAD,CAAO9E,KAAK,KACrB,QACE,OAAO,sEAMCuF,CAAajB,MAMvBlC,EAAUa,IAAOC,QAAV,K,qXCbEnB,MAhBf,WACE,IAAMjC,EAAQ0F,cAId,OAHAC,YAAO,KAAK,WACVlD,QAAQC,IAAI,WAGZ,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,uDACA,2BAAOxC,KAAK,OAAO0F,YAAa,sDAChC,gDACA,+BAAKL,KAAKC,UAAUxF,EAAO,KAAM,OAOnCsC,EAAUa,IAAOC,QAAV,KCvBE,SAASC,IACtB,OAAO,kBAAC,EAAD,MCkBMwC,MAff,WAEE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWC,IAEvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAaC,UAAWC,OCRnCC,OAHf,WACE,OAAO,kBAAC,EAAD,O,YCITC,IAASC,OACP,kBAAC,IAAD,CAAeP,SAAUQ,eACvB,kBAAClG,EAAD,KACE,kBAACS,EAAD,KACE,kBAAC,GAAD,SAIN0F,SAASC,eAAe,W","file":"static/js/main.3dc17647.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/typescript.3de182d2.svg\";","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\n//---------------------------------------------------------------------\n//type\ntype GlobalState = object | undefined | null\ntype Action = {type: 'CREATE'; title: string; name: any} | {type: 'UPDATE'; title: string; name: string} | {type: 'REMOVE'; title: string | null}\ntype GlobalDispatch = Dispatch<Action>\n//context\nconst stateContext = createContext<object | undefined>(undefined)\nconst dispatchContext = createContext<GlobalDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param {state}   : object\n * @param {action}  : action type\n */\nfunction globalReducer(state: GlobalState, action: Action): object {\n  switch (action.type) {\n    case 'CREATE':\n      return action\n    case 'UPDATE':\n      return {...state, ...action}\n    case 'REMOVE':\n      return {}\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n *  Provider\n */\nexport function GlobalContextProvider({children}: {children: React.ReactNode}) {\n  const defaultState = {\n    auth: 'defaultState_title_string'\n  }\n  const [state, dispatch] = useReducer(globalReducer, defaultState)\n  return (\n    <dispatchContext.Provider value={dispatch}>\n      <stateContext.Provider value={state}>{children}</stateContext.Provider>\n    </dispatchContext.Provider>\n  )\n}\n/**\n *  useState\n *\n */\nexport function useGlobalState() {\n  const state = useContext(stateContext)\n  if (!state) throw new Error('useGlobalState not found')\n  return state\n}\n/**\n *  useDispatch\n */\nexport function useGlobalDispatch() {\n  const dispatch = useContext(dispatchContext)\n  if (!dispatch) throw new Error('useGlobalDispatch not found')\n  return dispatch\n}\n","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\n//---------------------------------------------------------------------\ntype PageState = {\n  title?: string | undefined\n  depth?: string[]\n}\ntype Action = {type: 'UPDATE'; info: object} | {type: 'REMOVE'; info: object}\ntype PageDispatch = Dispatch<Action>\nconst stateContext = createContext<object | undefined>(undefined)\nconst dispatchContext = createContext<PageDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param {state}   : object\n * @param {action}  : action type\n */\nfunction reducer(state: PageState, action: Action): object {\n  switch (action.type) {\n    case 'UPDATE':\n      return {...state, ...action.info}\n    case 'REMOVE':\n      return state\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n * @title Provider\n */\nexport function PageContextProvider({children}: {children: React.ReactNode}) {\n  const defaultState: any = {\n    title: 'title'\n  }\n  const [state, dispatch] = useReducer(reducer, defaultState)\n  return (\n    <dispatchContext.Provider value={dispatch}>\n      <stateContext.Provider value={state}>{children}</stateContext.Provider>\n    </dispatchContext.Provider>\n  )\n}\n/**\n * useState\n */\nexport function usePageState() {\n  const state = useContext(stateContext)\n  if (!state) throw new Error('usePageState not found')\n  return state\n}\n/**\n * useDispatch\n */\nexport function usePageDispatch() {\n  const dispatch = useContext(dispatchContext)\n  if (!dispatch) throw new Error('usePageDispatch not found')\n  return dispatch\n}\n","/*\n */\nimport React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\n\ntype Navigation = {\n  title: string\n  link: string\n}\ntype Navigations = Navigation[]\n//---------------------------------------------------------------------\nfunction Navi() {\n  //const\n  const [data] = useState<Navigations>([\n    {title: 'Main', link: '/'},\n    {title: 'Login', link: '/login'},\n    {title: 'Search', link: '/search'},\n    {title: 'Guide', link: '/guide'},\n    {title: 'Hooks', link: '/guide/hooks'}\n\n    // {title: 'Button', link: '/button'},\n    // {title: 'Form', link: '/form'},\n    // {title: 'markdown', link: '/markdown'}\n  ])\n  //makeObject\n  const makeNavi = (): JSX.Element[] => {\n    return data.map(({title, link}: Navigation, index) => {\n      return (\n        <dl key={index}>\n          <dt>\n            <Link to={link}>{title}</Link>\n          </dt>\n        </dl>\n      )\n    })\n  }\n  return <React.Fragment>{makeNavi()}</React.Fragment>\n}\nexport default Navi\n//---------------------------------------------------------------------\n","import React from 'react'\nimport Navi from './navi'\nimport Logo from 'static/svg/typescript.svg'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons'\nimport {faCamera} from '@fortawesome/free-solid-svg-icons'\nexport default () => {\n  //initalize\n  return (\n    <header>\n      <div className=\"logo\">\n        <img src={Logo} />\n        <span>Typescript</span>\n      </div>\n      <Navi />\n      <footer>\n        <a href=\"mailto:yeshtml5@gmail.com\">\n          <FontAwesomeIcon icon={faEnvelope} />\n        </a>\n        <a href=\"https://github.com/yeshtml5/typescript\" target=\"_blank\">\n          <FontAwesomeIcon icon={faGithub} />\n        </a>\n        <a href=\"https://unsplash.com/@yeshtml5\" target=\"_blank\">\n          <FontAwesomeIcon icon={faCamera} />\n        </a>\n        <p>\n          © 2020 Yeshtml5,\n          <br />\n          ALL RIGHTS RESERVED.\n        </p>\n      </footer>\n    </header>\n  )\n}\n","import React from 'react'\nimport Header from './content/header'\n\ntype Props = {\n  children: React.ReactNode\n}\n\nexport default ({children}: Props) => {\n  return (\n    <main>\n      <Header />\n      <article>{children}</article>\n    </main>\n  )\n}\n","/**\n * @title\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport {Layout} from 'pages'\nimport {useGlobalState, useGlobalDispatch} from 'contexts/global'\n\nfunction Presenter() {\n  //context\n  const global = useGlobalState()\n  const dispatch = useGlobalDispatch()\n  //initalize\n  //useState\n  return (\n    <Layout>\n      <Content>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'REMOVE', title: 'name'})\n            }}>\n            'REMOVE'\n          </button>\n        </p>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'CREATE', title: 'hey ', name: 1111})\n            }}></button>\n        </p>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'UPDATE', title: 'UPDATE ', name: 'react'})\n            }}>\n            'UPDATE1'\n          </button>\n        </p>\n\n        <button\n          onClick={() => {\n            console.log(global)\n          }}>\n          확인\n        </button>\n        <h1>Todo 컴포넌트 제작중</h1>\n        <div>test</div>\n        <div>\n          <button\n            onClick={() => {\n              let newVariable = window.navigator as any\n              if (newVariable.share) {\n                newVariable\n                  .share({\n                    title: '공유하기 예제',\n                    text: '고별 지루하기 짝이없는 명제들 그래도 그것은 진실',\n                    url: 'https://naver.com'\n                  })\n                  .then(() => alert('공유하기'))\n              } else {\n                alert('share not supported')\n              }\n            }}>\n            webShare\n          </button>\n        </div>\n        {/* <counter startCount={3} /> */}\n      </Content>\n    </Layout>\n  )\n}\nexport default Presenter\n\nconst Content = styled.section`\n  p {\n    margin-bottom: 10px;\n  }\n  button {\n    display: inline-block;\n    padding: 10px;\n    font-size: 16px;\n    color: #ff0000;\n    background: #111;\n  }\n`\n","import React from 'react'\nimport Presenter from './presenter'\n\nexport default function Container() {\n  return <Presenter />\n}\n","import React, {useRef} from 'react'\nimport styled from 'styled-components'\nimport {Layout} from 'pages'\nimport {useChanges} from 'components/hooks/useHooks'\n\ntype Props = {\n  onUpdate: (data: object) => void\n  onSubmit: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\nfunction Presenter({onUpdate, onSubmit}: Props) {\n  //hooks\n  const refId = useRef<HTMLInputElement>(null)\n  const refPassword = useRef<HTMLInputElement>(null)\n  const {changes, onChange} = useChanges(onUpdate)\n\n  //validation\n  const setFocus = (ref: React.RefObject<HTMLInputElement>) => {\n    if (ref && ref.current) ref.current.focus()\n  }\n  //submit\n  // const onSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n\n  //   //validation\n  //   const {id, password} = changes\n  //   if (!id) {\n  //     alert('id가 없습니다.')\n  //     setFocus(refId)\n  //     return\n  //   }\n  //   if (!password) {\n  //     alert('password 없습니다.')\n  //     setFocus(refPassword)\n  //     return\n  //   }\n  //   const auth = firebase.auth()\n  //   auth.signInWithEmailAndPassword(id, password).then(async res => {\n  //     console.log(res)\n  //   })\n  //   alert(JSON.stringify(changes, null, 1))\n  // }\n\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <Content>\n        <h1>Login</h1>\n        <div className=\"in_wrap\">\n          <label htmlFor=\"id\">\n            <span>아이디</span>\n            <input ref={refId} id=\"id\" type=\"text\" name=\"id\" onChange={onChange} />\n          </label>\n          <label htmlFor=\"password\">\n            <span>패스워드</span>\n            <input ref={refPassword} id=\"password\" type=\"password\" name=\"password\" onChange={onChange} />\n          </label>\n          <button onClick={onSubmit}>전송</button>\n        </div>\n      </Content>\n    </Layout>\n  )\n}\nexport default Presenter\n//---------------------------------------------------------------------\nconst Content = styled.section`\n  h1 {\n    position: relative;\n    display: block;\n    padding-bottom: 10px;\n    &:after {\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      width: 100%;\n      height: 1px;\n      background: #ccc;\n      content: '';\n    }\n  }\n  .in_wrap {\n    display: block;\n    width: 80%;\n    padding: 50px 0;\n    label {\n      display: block;\n      margin-bottom: 10px;\n      span {\n        display: inline-block;\n        width: 80px;\n      }\n    }\n    button {\n      display: block;\n      width: 100%;\n      padding: 10px;\n      color: #fff;\n      background: #111;\n    }\n  }\n  input {\n    display: inline-block;\n    min-width: 200px;\n    padding: 10px 10px;\n    border: 1px solid #111;\n  }\n  min-height: 100px;\n`\n","import React, {useReducer} from 'react'\n\n//type\ntype Action = {type: 'UPDATE'; info: object}\n/**\n * @function onChange 이벤트에 key:value state관리\n * @param callback\n * @param defaultValue\n */\nexport const useChanges = (callback: {}, defaultValue?: {}) => {\n  //useReducer\n  const [changes, dispatch] = useReducer(reducer, defaultValue || {})\n  //---------------------------------------------------------------------\n  //reducer\n  function reducer(changes: {}, action: Action): any {\n    switch (action.type) {\n      case 'UPDATE':\n        const info = {...changes, ...action.info}\n        if (callback !== undefined && typeof callback === 'function') callback(info)\n        return {...changes, ...action.info}\n      default:\n        throw new Error('Unhandled action')\n    }\n  }\n  //onChange\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.persist()\n    let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n    try {\n      if (event.target.name === '') throw 'target.name.null'\n    } catch (err) {\n      switch (err) {\n        case 'target.name.null':\n          alert('name값이 정의되지 않았습니다.')\n          break\n      }\n    }\n    const _info = {...changes, [event.target.name]: _val}\n    dispatch({type: 'UPDATE', info: {..._info}})\n  }\n\n  return {onChange, changes}\n}\n//---------------------------------------------------------------------\n","import React, {useState} from 'react'\nimport Presenter from './presenter'\n\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport firebase from 'firebase/app'\nimport {FIREBASE_CONFIG} from 'constpack'\n\nfirebase.initializeApp(FIREBASE_CONFIG)\n\nexport default function Container() {\n  //\n  const [loginInfo, setLoginInfo] = useState(null)\n  const onUpdate = data => {\n    // console.log(data)\n    setLoginInfo(data)\n  }\n  const onSubmit = event => {\n    console.log(loginInfo)\n    console.log(event)\n    // //validation\n    // const {id, password} = changes\n    // if (!id) {\n    //   alert('id가 없습니다.')\n    //   setFocus(refId)\n    //   return\n    // }\n    // if (!password) {\n    //   alert('password 없습니다.')\n    //   setFocus(refPassword)\n    //   return\n    // }\n    // const auth = firebase.auth()\n    // auth.signInWithEmailAndPassword(id, password).then(async res => {\n    //   console.log(res)\n    // })\n    // alert(JSON.stringify(changes, null, 1))\n  }\n  return <Presenter onUpdate={onUpdate} onSubmit={onSubmit} />\n}\n","// 로그인 FIREBASE정보\nexport const FIREBASE_CONFIG = {}\n\ntype ServerURL = {\n  production: string\n  beta: string\n  development: string\n}\n\nconst API_URL: ServerURL = {\n  production: '',\n  beta: '',\n  development: ''\n}\nexport default API_URL\n","import React, {useReducer} from 'react'\ninterface DefaultValue {\n  callback: () => {}\n  title: string\n  //changes?: {key: string}\n}\n//type\ntype Action = {type: 'UPDATE'; info: object}\n\nexport const useChanges = (callback: any, defaultValue: any) => {\n  //reducer\n  const [state, dispatch] = useReducer(reducer, defaultValue)\n  //state\n  /**\n   * reducer\n   * @param {state}   : object\n   * @param {action}  : action type\n   */\n  function reducer(state: any, action: Action): object {\n    switch (action.type) {\n      case 'UPDATE':\n        const info = {...state, ...action.info}\n        if (callback !== undefined && typeof callback === 'function') callback(info)\n        return {...state, ...action.info}\n      default:\n        throw new Error('Unhandled action')\n    }\n  }\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.persist()\n    let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n\n    const _info = {...state, [event.target.name]: _val}\n\n    // setChanges({...changes, [event.target.name]: event.target.value})\n    dispatch({type: 'UPDATE', info: {..._info}})\n  }\n\n  return {onChange, state}\n}\n\n/**\n * @title\n *\n *\n * \n//import\nimport useChange from 'components/hooks/useChange'\n\n//hooks\nconst {changes, setChanges, onChange} = useChange(update, {onChange: -1})\n\n//update\nfunction update(mode) {\n  switch (true) {\n    case mode.onChange !== undefined:\n      console.log(JSON.stringify(changes))\n      break\n  }\n}\n\n//jsx\n<input placeholder=\"TEST\" name=\"test1\" onChange={onChange} />\n<input name=\"part\" data-type=\"number\" type=\"radio\" value=\"false\" onChange={onChange} />\n<input name=\"part\" data-type=\"boolean\" type=\"radio\" value=\"true\" onChange={onChange} />\n<input type=\"checkbox\" data-type=\"array\" name=\"age\" value={[10, 11, 12, 13, 14]} onChange={onChange} /> 10대\n */\n\n// import {useCallback, useEffect, useState} from 'react'\n// //\n// const useChange = (callback, defaultValue) => {\n//   //---------------------------------------------------------------------\n//   const [changes, setChanges] = useState({...defaultValue})\n//   //---------------------------------------------------------------------\n//   const onChange = useCallback(event => {\n//     if (event === undefined) {\n//       return\n//     }\n//     event.persist()\n//     let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n//     /**\n//      * @example data-type에 맞춰사 강제 형변환을 할수있다.\n//      */\n//     if (event.target.dataset.type !== undefined && event.target.dataset.type !== '') {\n//       if (event.target.dataset.type.indexOf('number') !== -1) _val = parseInt(_val)\n//       if (event.target.dataset.type.indexOf('boolean') !== -1) _val = _val === 'true' ? true : false\n//       if (event.target.dataset.type.indexOf('checked') !== -1) _val = event.target.checked\n//       //\n//       if (event.target.dataset.type.indexOf('array') !== -1) {\n//         const _ary = changes[event.target.name]\n//         switch (event.target.checked) {\n//           case true: //--------------------------------------------checked\n//             _val = _ary === undefined || _ary === null ? [_val] : _ary.concat(_val)\n//             break\n//           case false: //-------------------------------------------unchecked\n//             if (_ary === undefined || _ary === null) return\n//             _val = _ary.filter(ele => ele !== _val)\n//             break\n//         }\n//       }\n//     }\n//     //예외처리\n//     if (_val === 'null') _val = null\n//     setChanges(changes => ({...changes, [event.target.name]: _val, ['last_changes']: event.target.name}))\n//   })\n//   //---------------------------------------------------------------------\n//   useEffect(() => {\n//     if (callback !== undefined && typeof callback === 'function') callback(changes)\n//   }, [changes])\n//   return {onChange, setChanges, changes}\n// }\n// export default useChange\n","import {createGlobalState} from 'react-use'\n\ntype Props = {\n  title?: string\n  type?: string | null\n}\n\nexport const useGuideStore = createGlobalState<Props>({title: 'test'})\n","import React from 'react'\nimport styled from 'styled-components'\nimport {useChanges} from 'components/hooks/useChanges'\nimport {useGuideStore} from '../store'\n\ntype Type = {\n  mode?: string\n}\ninterface Props extends Type {\n  type?: string\n  method?: () => void\n  clickHandler?: (event: React.MouseEvent) => void\n}\n\nfunction Hooks({type, mode, method, clickHandler}: Props) {\n  const [value, setValue] = useGuideStore()\n  const {state, onChange} = useChanges(update, {onChange: '-1'})\n  const btnClick = () => {\n    console.log(state)\n  }\n  //hooks\n  function update(data: any) {\n    console.log(data)\n  }\n  return (\n    <Content>\n      <div>\n        <button onClick={() => setValue({...value, type: 'apple'})}>오브텍트</button>\n        <button onClick={() => setValue({...value, type: 'car'})}>car</button>\n        <button onClick={() => setValue({type: null})}>REMOVE</button>\n\n        <h1>type: {type}</h1>\n        <h1>mode: {mode}</h1>\n        <button onClick={clickHandler}>버튼</button>\n        <input type=\"text\" name=\"title\" defaultValue=\"값을입력\" onChange={onChange} />\n        <input type=\"checkbox\" name=\"box\" onChange={onChange} />\n      </div>\n      <button onClick={btnClick}>버튼클릭</button>\n    </Content>\n  )\n}\n\nexport default Hooks\n\nconst Content = styled.section`\n  button {\n    display: inline-block;\n    padding: 10px 20px;\n    background: #111;\n    color: #fff;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Layout from 'pages/common/layout'\nimport Hooks from './hooks'\nimport {useGuideStore} from './store'\n\ntype Props = {\n  type: string\n  match: {\n    path: string\n    url: string\n    params: {\n      id: string\n    }\n  }\n}\n\nfunction Guide({match, type}: Props) {\n  const [value] = useGuideStore()\n  const {id} = match.params\n  const makeContents = (mode: string = '') => {\n    switch (true) {\n      case mode === 'hooks':\n        return <Hooks type=\"\" />\n      default:\n        return <h1>값이 없습니다</h1>\n    }\n  }\n  return (\n    <Layout>\n      <p>{JSON.stringify(value)}</p>\n      <Content>{makeContents(id)}</Content>\n    </Layout>\n  )\n}\nexport default Guide\n\nconst Content = styled.section`\n  span {\n    color: #ff0000;\n    font-size: 24px;\n  }\n`\n","/**\n * @title\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport {Layout} from 'pages'\nimport {useGlobalState, useGlobalDispatch} from 'contexts/global'\nimport {useKey, useGeolocation} from 'react-use'\nfunction Presenter() {\n  const state = useGeolocation()\n  useKey('1', () => {\n    console.log('test')\n  })\n  return (\n    <Layout>\n      <Content>\n        <p>검색영역</p>\n        <input type=\"text\" placeholder={'값을 입력해주세요'} />\n        <button>버튼</button>\n        <p> {JSON.stringify(state, null, 2)}</p>\n      </Content>\n    </Layout>\n  )\n}\nexport default Presenter\n\nconst Content = styled.section`\n  height: 3000px;\n  p {\n    margin-bottom: 10px;\n  }\n  input {\n    display: inline-block;\n    padding: 10px 20px;\n    border: 1px solid #111;\n  }\n  button {\n    display: inline-block;\n    padding: 10px;\n    font-size: 16px;\n    color: #ff0000;\n    background: #111;\n  }\n`\n","import React from 'react'\nimport Presenter from './presenter'\n\nexport default function Container() {\n  return <Presenter />\n}\n","/**\n * @title\n */\nimport React from 'react'\nimport {Route, Switch, HashRouter} from 'react-router-dom'\nimport * as Pages from 'pages'\n\nfunction Router() {\n  //initalize\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={Pages.Main} />\n        <Route exact path=\"/login\" component={Pages.Login} />\n        <Route exact path=\"/search\" component={Pages.Search} />\n\n        <Route exact path=\"/guide\" component={Pages.Guide} />\n        <Route exact path=\"/guide/:id\" component={Pages.Guide} />\n      </Switch>\n    </HashRouter>\n  )\n}\nexport default Router\n/*\n <Route exact path=\"/todo\" component={todo} />\n        <Route exact path=\"/form\" component={form} />\n        <Route exact path=\"/markdown\" component={markdown} />\n        <Route exact path=\"/tab\" component={tab} />\n        <Route exact path=\"/login\" component={login} />\n        <Route exact path=\"/kakao-map\" component={kakaoMap} /> \n        \n       <Route exact path=\"/guide\" component={guide} />\n        <Route exact path=\"/guide/:id\" component={guide} />\n\n        <Route exact path=\"/hooks\" component={hooks} /> \n*/\n","/**\n * @title\n */\nimport React from 'react'\nimport {Router} from 'lib/index'\n\nfunction App() {\n  return <Router />\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n//contexts\nimport {GlobalContextProvider, PageContextProvider} from 'contexts'\n//App\nimport App from './App'\n//style\nimport 'static/styles/common.scss'\nimport 'static/styles/layout.scss'\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <GlobalContextProvider>\n      <PageContextProvider>\n        <App />\n      </PageContextProvider>\n    </GlobalContextProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}