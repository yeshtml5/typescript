{"version":3,"sources":["static/svg/typescript.svg","contexts/global.ts","pages/common/layout/content/navi.tsx","pages/common/layout/content/header.tsx","pages/common/layout/index.tsx","pages/main/presenter.tsx","pages/main/container.tsx","constpack/env/firebase.ts","pages/login/presenter.tsx","pages/login/container.tsx","pages/guide/store.ts","pages/guide/hooks/index.tsx","components/hooks/useChanges.ts","pages/guide/index.tsx","pages/search/presenter.tsx","pages/search/container.tsx","pages/mypage/presenter.tsx","pages/mypage/container.tsx","lib/routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createStateContext","isLogin","useGlobal","useGlobalProvider","useGlobalStore","GlobalProvider","Navi","useState","title","link","data","Fragment","map","index","key","to","className","href","src","Logo","alt","icon","faEnvelope","faGithub","faCamera","children","Presenter","global","history","useHistory","Content","onClick","push","styled","section","Container","authService","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onSubmit","useMap","setAll","refEmail","useRef","refPassword","htmlFor","ref","type","placeholder","onChange","e","email","target","value","password","Social","JSON","stringify","div","a","console","log","signInWithEmailAndPassword","alert","message","useGuideStore","createGlobalState","Hooks","mode","clickHandler","method","setValue","callback","defaultValue","useReducer","state","action","info","undefined","Error","dispatch","event","persist","_val","checked","_info","name","useChanges","Guide","match","id","params","makeContents","useGeolocation","useKey","signOut","then","catch","error","Router","basename","exact","path","component","Pages","App","isLoad","setIsLoad","setGlobal","useEffect","onAuthStateChanged","user","_isLogin","ReactDOM","render","process","document","getElementById"],"mappings":"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","file":"static/js/main.fcb49fc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/typescript.3de182d2.svg\";","/**\n * @reference https://github.com/streamich/react-use/blob/HEAD/docs/createStateContext.md\n */\n\nimport {createStateContext} from 'react-use'\n\ntype Props = {\n  isLogin: boolean\n  [key: string]: any\n}\n// Global Default\nconst defaultValue = {\n  isLogin: false //로그인여부\n}\nconst [useGlobal, useGlobalProvider] = createStateContext<Props>(defaultValue)\n\nexport const useGlobalStore = useGlobal\nexport const GlobalProvider = useGlobalProvider\n","/*\n */\nimport React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\n\ntype Navigation = {\n  title: string\n  link: string\n}\ntype Navigations = Navigation[]\n//---------------------------------------------------------------------\nfunction Navi() {\n  //const\n  const [data] = useState<Navigations>([\n    {title: 'Main', link: '/'},\n    {title: 'Mypage', link: '/mypage'},\n    {title: 'Login', link: '/login'},\n    {title: 'Search', link: '/search'},\n    {title: 'Guide', link: '/guide'},\n    {title: 'Hooks', link: '/guide/hooks'}\n\n    // {title: 'Button', link: '/button'},\n    // {title: 'Form', link: '/form'},\n    // {title: 'markdown', link: '/markdown'}\n  ])\n  //makeObject\n  const makeNavi = (): JSX.Element[] => {\n    return data.map(({title, link}: Navigation, index) => {\n      return (\n        <dl key={index}>\n          <dt>\n            <Link to={link}>{title}</Link>\n          </dt>\n        </dl>\n      )\n    })\n  }\n  return <React.Fragment>{makeNavi()}</React.Fragment>\n}\nexport default Navi\n//---------------------------------------------------------------------\n","import React from 'react'\nimport Navi from './navi'\nimport Logo from 'static/svg/typescript.svg'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons'\nimport {faCamera} from '@fortawesome/free-solid-svg-icons'\nexport default () => {\n  //initalize\n  return (\n    <header>\n      <div className=\"logo\">\n        <a href=\"/\">\n          <img src={Logo} alt=\"logo\" />\n          <span>Typescript</span>\n        </a>\n      </div>\n      <Navi />\n      <footer>\n        <a href=\"mailto:yeshtml5@gmail.com\">\n          <FontAwesomeIcon icon={faEnvelope} />\n        </a>\n        <a href=\"https://github.com/yeshtml5/typescript\">\n          <FontAwesomeIcon icon={faGithub} />\n        </a>\n        <a href=\"https://unsplash.com/@yeshtml5\">\n          <FontAwesomeIcon icon={faCamera} />\n        </a>\n        <p>\n          © 2020 Yeshtml5,\n          <br />\n          ALL RIGHTS RESERVED.\n        </p>\n      </footer>\n    </header>\n  )\n}\n","import React from 'react'\nimport Header from './content/header'\n\ntype Props = {\n  children: React.ReactNode\n}\n\nexport default ({children}: Props) => {\n  return (\n    <main>\n      <Header />\n      <article>{children}</article>\n    </main>\n  )\n}\n","/**\n * @title\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport {Layout} from 'pages'\nimport {useGlobalStore} from 'contexts'\nimport {useHistory} from 'react-router-dom'\n\nfunction Presenter() {\n  const [global] = useGlobalStore()\n  const history = useHistory()\n  const {isLogin} = global\n  return (\n    <Layout>\n      <Content>\n        <button\n          onClick={() => {\n            if (isLogin) history.push('/mypage')\n            if (!isLogin) history.push('/login')\n          }}>\n          페이지분기\n        </button>\n      </Content>\n    </Layout>\n  )\n}\nexport default Presenter\n\nconst Content = styled.section`\n  p {\n    margin-bottom: 10px;\n  }\n  button {\n    display: block;\n    margin-bottom: 10px;\n    padding: 10px;\n    font-size: 16px;\n    color: #ff0000;\n    background: #111;\n  }\n`\n","import React from 'react'\nimport Presenter from './presenter'\n\nfunction Container() {\n  return <Presenter />\n}\n\nexport default Container\n","import * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst FIREBASE_CONFIG = {\n  apiKey: 'AIzaSyA6V3Hu0OPf7k_HA08W4SgDhB3vxTvtTdc',\n  authDomain: 'yeshtml5-typescript.firebaseapp.com',\n  databaseURL: 'https://yeshtml5-typescript.firebaseio.com',\n  projectId: 'yeshtml5-typescript',\n  storageBucket: 'yeshtml5-typescript.appspot.com',\n  messagingSenderId: '104514429640',\n  appId: '1:104514429640:web:b65c7e22b09bfb64edfbfd',\n  measurementId: 'G-Z08STV8SC6'\n}\n// Initialize Firebase\nexport default firebase.initializeApp(FIREBASE_CONFIG)\n\nexport const authService = firebase.auth()\n","import React, {useRef} from 'react'\nimport {useMap} from 'react-use'\nimport styled from 'styled-components'\nimport {Layout} from 'pages'\n//import {useGlobalStore} from 'contexts'\n\ntype Props = {\n  onSubmit: (data: object) => void\n}\nfunction Presenter({onSubmit}: Props) {\n  const [map, {setAll}] = useMap({})\n  const refEmail = useRef<HTMLInputElement>(null)\n  const refPassword = useRef<HTMLInputElement>(null)\n\n  return (\n    <Layout>\n      <Content>\n        <h1>Login</h1>\n        <div className=\"in_wrap\">\n          <label htmlFor=\"id\">\n            <span>이메일</span>\n            <input\n              ref={refEmail}\n              type=\"text\"\n              placeholder={'e-mail'}\n              onChange={e => {\n                setAll({...map, email: e.target.value})\n              }}\n            />\n          </label>\n          <label htmlFor=\"password\">\n            <span>패스워드</span>\n            <input\n              ref={refPassword}\n              type=\"password\"\n              placeholder={'password'}\n              onChange={e => {\n                setAll({...map, password: e.target.value})\n              }}\n            />\n          </label>\n          <button\n            onClick={() => {\n              onSubmit(map)\n            }}>\n            전송\n          </button>\n        </div>\n        <Social>\n          <button>1</button>\n        </Social>\n      </Content>\n      <div>{JSON.stringify(map, null, 2)}</div>\n    </Layout>\n  )\n}\nexport default Presenter\n\nconst Content = styled.section`\n  h1 {\n    position: relative;\n    display: block;\n    padding-bottom: 10px;\n    &:after {\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      width: 100%;\n      height: 1px;\n      background: #ccc;\n      content: '';\n    }\n  }\n  .in_wrap {\n    display: block;\n    width: 80%;\n    padding: 50px 0;\n    label {\n      display: block;\n      margin-bottom: 10px;\n      span {\n        display: inline-block;\n        width: 80px;\n      }\n    }\n    button {\n      display: block;\n      width: 100%;\n      padding: 10px;\n      color: #fff;\n      background: #111;\n    }\n  }\n  input {\n    display: inline-block;\n    min-width: 200px;\n    padding: 10px 10px;\n    border: 1px solid #111;\n  }\n  min-height: 100px;\n`\nconst Social = styled.div``\n","import React, {useEffect} from 'react'\nimport {authService} from 'constpack'\nimport {useGlobalStore} from 'contexts'\nimport Presenter from './presenter'\n\nfunction Container() {\n  const [global] = useGlobalStore()\n\n  const onSubmit = async data => {\n    try {\n      const {email, password} = data\n      console.log(global.isLogin)\n      let result\n      result = await authService.signInWithEmailAndPassword(email, password)\n\n      // if (global.isLogin) {\n      //   result = await authService.signInWithEmailAndPassword(email, password)\n      // }\n      // if (!global.isLogin) {\n      //   result = await authService.createUserWithEmailAndPassword(email, password)\n      // }\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n  return <Presenter onSubmit={onSubmit} />\n}\nexport default Container\n","import {createGlobalState} from 'react-use'\n\ntype Props = {\n  title?: string\n  type?: string | null\n}\n\nexport const useGuideStore = createGlobalState<Props>({title: 'test'})\n","import React from 'react'\nimport styled from 'styled-components'\nimport {useChanges} from 'components/hooks/useChanges'\nimport {useGuideStore} from '../store'\n\ntype Type = {\n  mode?: string\n}\ninterface Props extends Type {\n  type?: string\n  method?: () => void\n  clickHandler?: (event: React.MouseEvent) => void\n}\n\nfunction Hooks({type, mode, method, clickHandler}: Props) {\n  const [value, setValue] = useGuideStore()\n  const {state, onChange} = useChanges(update, {onChange: '-1'})\n  const btnClick = () => {\n    console.log(state)\n  }\n  //hooks\n  function update(data: any) {\n    console.log(data)\n  }\n  return (\n    <Content>\n      <div>\n        <button onClick={() => setValue({...value, type: 'apple'})}>오브텍트</button>\n        <button onClick={() => setValue({...value, type: 'car'})}>car</button>\n        <button onClick={() => setValue({type: null})}>REMOVE</button>\n\n        <h1>type: {type}</h1>\n        <h1>mode: {mode}</h1>\n        <button onClick={clickHandler}>버튼</button>\n        <input type=\"text\" name=\"title\" defaultValue=\"값을입력\" onChange={onChange} />\n        <input type=\"checkbox\" name=\"box\" onChange={onChange} />\n      </div>\n      <button onClick={btnClick}>버튼클릭</button>\n    </Content>\n  )\n}\n\nexport default Hooks\n\nconst Content = styled.section`\n  button {\n    display: inline-block;\n    padding: 10px 20px;\n    background: #111;\n    color: #fff;\n  }\n`\n","import React, {useReducer} from 'react'\ninterface DefaultValue {\n  callback: () => {}\n  title: string\n  //changes?: {key: string}\n}\n//type\ntype Action = {type: 'UPDATE'; info: object}\n\nexport const useChanges = (callback: any, defaultValue: any) => {\n  //reducer\n  const [state, dispatch] = useReducer(reducer, defaultValue)\n  //state\n  /**\n   * reducer\n   * @param {state}   : object\n   * @param {action}  : action type\n   */\n  function reducer(state: any, action: Action): object {\n    switch (action.type) {\n      case 'UPDATE':\n        const info = {...state, ...action.info}\n        if (callback !== undefined && typeof callback === 'function') callback(info)\n        return {...state, ...action.info}\n      default:\n        throw new Error('Unhandled action')\n    }\n  }\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.persist()\n    let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n\n    const _info = {...state, [event.target.name]: _val}\n\n    // setChanges({...changes, [event.target.name]: event.target.value})\n    dispatch({type: 'UPDATE', info: {..._info}})\n  }\n\n  return {onChange, state}\n}\n\n/**\n * @title\n *\n *\n * \n//import\nimport useChange from 'components/hooks/useChange'\n\n//hooks\nconst {changes, setChanges, onChange} = useChange(update, {onChange: -1})\n\n//update\nfunction update(mode) {\n  switch (true) {\n    case mode.onChange !== undefined:\n      console.log(JSON.stringify(changes))\n      break\n  }\n}\n\n//jsx\n<input placeholder=\"TEST\" name=\"test1\" onChange={onChange} />\n<input name=\"part\" data-type=\"number\" type=\"radio\" value=\"false\" onChange={onChange} />\n<input name=\"part\" data-type=\"boolean\" type=\"radio\" value=\"true\" onChange={onChange} />\n<input type=\"checkbox\" data-type=\"array\" name=\"age\" value={[10, 11, 12, 13, 14]} onChange={onChange} /> 10대\n */\n\n// import {useCallback, useEffect, useState} from 'react'\n// //\n// const useChange = (callback, defaultValue) => {\n//   //---------------------------------------------------------------------\n//   const [changes, setChanges] = useState({...defaultValue})\n//   //---------------------------------------------------------------------\n//   const onChange = useCallback(event => {\n//     if (event === undefined) {\n//       return\n//     }\n//     event.persist()\n//     let _val = event.target.type === 'checkbox' && event.target.value === 'on' ? event.target.checked : event.target.value\n//     /**\n//      * @example data-type에 맞춰사 강제 형변환을 할수있다.\n//      */\n//     if (event.target.dataset.type !== undefined && event.target.dataset.type !== '') {\n//       if (event.target.dataset.type.indexOf('number') !== -1) _val = parseInt(_val)\n//       if (event.target.dataset.type.indexOf('boolean') !== -1) _val = _val === 'true' ? true : false\n//       if (event.target.dataset.type.indexOf('checked') !== -1) _val = event.target.checked\n//       //\n//       if (event.target.dataset.type.indexOf('array') !== -1) {\n//         const _ary = changes[event.target.name]\n//         switch (event.target.checked) {\n//           case true: //--------------------------------------------checked\n//             _val = _ary === undefined || _ary === null ? [_val] : _ary.concat(_val)\n//             break\n//           case false: //-------------------------------------------unchecked\n//             if (_ary === undefined || _ary === null) return\n//             _val = _ary.filter(ele => ele !== _val)\n//             break\n//         }\n//       }\n//     }\n//     //예외처리\n//     if (_val === 'null') _val = null\n//     setChanges(changes => ({...changes, [event.target.name]: _val, ['last_changes']: event.target.name}))\n//   })\n//   //---------------------------------------------------------------------\n//   useEffect(() => {\n//     if (callback !== undefined && typeof callback === 'function') callback(changes)\n//   }, [changes])\n//   return {onChange, setChanges, changes}\n// }\n// export default useChange\n","import React from 'react'\nimport styled from 'styled-components'\nimport Layout from 'pages/common/layout'\nimport Hooks from './hooks'\nimport {useGuideStore} from './store'\n\ntype Props = {\n  type: string\n  match: {\n    path: string\n    url: string\n    params: {\n      id: string\n    }\n  }\n}\n\nfunction Guide({match, type}: Props) {\n  const [value] = useGuideStore()\n  const {id} = match.params\n  const makeContents = (mode: string = '') => {\n    switch (true) {\n      case mode === 'hooks':\n        return <Hooks type=\"\" />\n      default:\n        return <h1>값이 없습니다</h1>\n    }\n  }\n  return (\n    <Layout>\n      <p>{JSON.stringify(value)}</p>\n      <Content>{makeContents(id)}</Content>\n    </Layout>\n  )\n}\nexport default Guide\n\nconst Content = styled.section`\n  span {\n    color: #ff0000;\n    font-size: 24px;\n  }\n`\n","/**\n * @title\n */\nimport React from 'react'\nimport styled from 'styled-components'\nimport {Layout} from 'pages'\nimport {useKey, useGeolocation} from 'react-use'\nfunction Presenter() {\n  const state = useGeolocation()\n  useKey('1', () => {\n    console.log('test')\n  })\n  return (\n    <Layout>\n      <Content>\n        <p>검색영역</p>\n        <input type=\"text\" placeholder={'값을 입력해주세요'} />\n        <button>버튼</button>\n        <p> {JSON.stringify(state, null, 2)}</p>\n      </Content>\n    </Layout>\n  )\n}\nexport default Presenter\n\nconst Content = styled.section`\n  height: 3000px;\n  p {\n    margin-bottom: 10px;\n  }\n  input {\n    display: inline-block;\n    padding: 10px 20px;\n    border: 1px solid #111;\n  }\n  button {\n    display: inline-block;\n    padding: 10px;\n    font-size: 16px;\n    color: #ff0000;\n    background: #111;\n  }\n`\n","import React from 'react'\nimport Presenter from './presenter'\n\nexport default function Container() {\n  return <Presenter />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Layout} from 'pages'\nimport {useGlobalStore} from 'contexts'\nimport {authService} from 'constpack'\ntype Props = {}\n\nfunction Presenter({}: Props) {\n  const [global] = useGlobalStore()\n  return (\n    <Layout>\n      <Content>\n        <h1>Mypage</h1>\n        <button\n          onClick={() => {\n            authService\n              .signOut()\n              .then(() => {\n                console.log('성공')\n              })\n              .catch(error => {\n                console.log(error)\n              })\n          }}>\n          로그아웃\n        </button>\n        <pre>{JSON.stringify(global, null, 1)}</pre>\n      </Content>\n    </Layout>\n  )\n}\nexport default Presenter\n\nconst Content = styled.section``\n","import React from 'react'\nimport Presenter from './presenter'\n\nfunction Container() {\n  return <Presenter />\n}\nexport default Container\n","/**\n * @title\n */\nimport React from 'react'\nimport {Route, Switch, HashRouter} from 'react-router-dom'\nimport * as Pages from 'pages'\n\nfunction Router() {\n  //initalize\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={Pages.Main} />\n        <Route exact path=\"/login\" component={Pages.Login} />\n        <Route exact path=\"/mypage\" component={Pages.Mypage} />\n        <Route exact path=\"/search\" component={Pages.Search} />\n\n        <Route exact path=\"/guide\" component={Pages.Guide} />\n        <Route exact path=\"/guide/:id\" component={Pages.Guide} />\n      </Switch>\n    </HashRouter>\n  )\n}\nexport default Router\n/*\n <Route exact path=\"/todo\" component={todo} />\n        <Route exact path=\"/form\" component={form} />\n        <Route exact path=\"/markdown\" component={markdown} />\n        <Route exact path=\"/tab\" component={tab} />\n        <Route exact path=\"/login\" component={login} />\n        <Route exact path=\"/kakao-map\" component={kakaoMap} /> \n        \n       <Route exact path=\"/guide\" component={guide} />\n        <Route exact path=\"/guide/:id\" component={guide} />\n\n        <Route exact path=\"/hooks\" component={hooks} /> \n*/\n","/**\n * @do 로그인체크\n */\nimport React, {useState, useEffect} from 'react'\nimport {Router} from 'lib'\nimport {authService} from 'constpack'\nimport {useGlobalStore} from 'contexts'\n\nfunction App() {\n  const [isLoad, setIsLoad] = useState(false)\n  const [global, setGlobal] = useGlobalStore()\n\n  useEffect(() => {\n    // 로그인체크\n    authService.onAuthStateChanged(user => {\n      const _isLogin = user ? true : false\n      if (user) setGlobal({...global, isLogin: _isLogin, user: user})\n      setIsLoad(true)\n    })\n  }, [])\n  return isLoad ? <Router /> : null\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport {GlobalProvider} from 'contexts'\nimport App from './App'\nimport 'static/styles/common.scss'\nimport 'static/styles/layout.scss'\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <GlobalProvider>\n      <App />\n    </GlobalProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}