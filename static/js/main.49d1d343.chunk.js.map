{"version":3,"sources":["static/svg/typescript.svg","contexts/global.tsx","contexts/page.tsx","pages/common/layout/content/navi.tsx","pages/common/layout/content/header.tsx","pages/common/layout/index.tsx","pages/guide/typescript/index.tsx","pages/main/index.tsx","pages/form/index.tsx","pages/modules/markdown/index.tsx","pages/modules/todo/context.tsx","pages/modules/todo/content/list.tsx","pages/modules/todo/content/add.tsx","pages/modules/todo/content/index.tsx","pages/modules/todo/index.tsx","components/ui/guide.tsx","pages/ui/tab.tsx","router.tsx","App.tsx","index.tsx"],"names":["module","exports","stateContext","createContext","undefined","dispatchContext","globalReducer","state","action","type","Error","GlobalContextProvider","children","useReducer","auth","dispatch","Provider","value","useGlobalState","useContext","reducer","info","PageContextProvider","title","Navi","useState","link","data","Fragment","map","index","key","to","className","src","Logo","props","Greetings","name","mark","defaultProps","App","global","useGlobalDispatch","Content","onClick","console","log","styled","section","useForm","register","setValue","handleSubmit","onSubmit","errors","age","useEffect","Form","ref","defaultValue","required","TodoStateContext","TodoDispatchContext","todosReducer","nextId","Math","max","todo","id","concat","text","done","filter","TodoContextProvider","todos","useTodoState","List","Add","useTodoDispatch","placeholder","onChange","e","target","div","Index","list","Todo","Guide","optional","Tab","Router","basename","exact","path","component","main","form","markdown","tab","ReactDOM","render","process","document","getElementById"],"mappings":"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","file":"static/js/main.49d1d343.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/typescript.3de182d2.svg\";","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\n//---------------------------------------------------------------------\n//type\ntype GlobalState = object | undefined | null\ntype Action = {type: 'CREATE'; title: string; name: any} | {type: 'UPDATE'; title: string; name: string} | {type: 'REMOVE'; title: string | null}\ntype GlobalDispatch = Dispatch<Action>\n//context\nconst stateContext = createContext<object | undefined>(undefined)\nconst dispatchContext = createContext<GlobalDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param {state}   : object\n * @param {action}  : action type\n */\nfunction globalReducer(state: GlobalState, action: Action): object {\n  switch (action.type) {\n    case 'CREATE':\n      return action\n    case 'UPDATE':\n      return {...state, ...action}\n    case 'REMOVE':\n      return {}\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n *  Provider\n */\nexport function GlobalContextProvider({children}: {children: React.ReactNode}) {\n  const defaultState = {\n    auth: '.../../'\n  }\n  const [state, dispatch] = useReducer(globalReducer, defaultState)\n  return (\n    <dispatchContext.Provider value={dispatch}>\n      <stateContext.Provider value={state}>{children}</stateContext.Provider>\n    </dispatchContext.Provider>\n  )\n}\n/**\n *  useState\n *\n */\nexport function useGlobalState() {\n  const state = useContext(stateContext)\n  if (!state) throw new Error('useGlobalState not found')\n  return state\n}\n/**\n *  useDispatch\n */\nexport function useGlobalDispatch() {\n  const dispatch = useContext(dispatchContext)\n  if (!dispatch) throw new Error('useGlobalDispatch not found')\n  return dispatch\n}\n","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\n//---------------------------------------------------------------------\ntype PageState = {\n  title?: string | undefined\n  depth?: string[]\n}\ntype Action = {type: 'UPDATE'; info: object} | {type: 'REMOVE'; info: object}\ntype PageDispatch = Dispatch<Action>\nconst stateContext = createContext<object | undefined>(undefined)\nconst dispatchContext = createContext<PageDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param {state}   : object\n * @param {action}  : action type\n */\nfunction reducer(state: PageState, action: Action): object {\n  switch (action.type) {\n    case 'UPDATE':\n      return {...state, ...action.info}\n    case 'REMOVE':\n      return state\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n * @title Provider\n */\nexport function PageContextProvider({children}: {children: React.ReactNode}) {\n  const defaultState: any = {\n    title: 'title'\n  }\n  const [state, dispatch] = useReducer(reducer, defaultState)\n  return (\n    <dispatchContext.Provider value={dispatch}>\n      <stateContext.Provider value={state}>{children}</stateContext.Provider>\n    </dispatchContext.Provider>\n  )\n}\n/**\n * useState\n */\nexport function usePageState() {\n  const state = useContext(stateContext)\n  if (!state) throw new Error('usePageState not found')\n  return state\n}\n/**\n * useDispatch\n */\nexport function usePageDispatch() {\n  const dispatch = useContext(dispatchContext)\n  if (!dispatch) throw new Error('usePageDispatch not found')\n  return dispatch\n}\n","/*\n */\nimport React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\n//component\n//layout\n//type\ntype Navigation = {\n  title: string\n  link: string\n}\ntype Navigations = Navigation[]\n//---------------------------------------------------------------------\nfunction Navi() {\n  //const\n  const [data] = useState<Navigations>([\n    {title: 'Main', link: '/'},\n    {title: 'Todo', link: '/todo'},\n    {title: 'Button', link: '/button'},\n    {title: 'Form', link: '/form'},\n    {title: 'markdown', link: '/markdown'}\n  ])\n  //makeObject\n  const makeNavi = (): JSX.Element[] => {\n    return data.map(({title, link}: Navigation, index) => {\n      return (\n        <dl key={index}>\n          <dt>\n            <Link to={link}>{title}</Link>\n          </dt>\n        </dl>\n      )\n    })\n  }\n  return <React.Fragment>{makeNavi()}</React.Fragment>\n}\nexport default Navi\n//---------------------------------------------------------------------\n","/*\n */\nimport React from 'react'\n//component\n//layout\nimport Navi from './navi'\n//static\nimport Logo from 'static/svg/typescript.svg'\nexport default () => {\n  //initalize\n  //-----------------------------------------------------\n  return (\n    <header>\n      <div className=\"logo\">\n        <img src={Logo} />\n        <span>Typescript</span>\n      </div>\n      <Navi />\n    </header>\n  )\n}\n","/*\n * @example https://dashboard.zawiastudio.com/demo/home-overview.html\n */\nimport React from 'react'\n//component\n//layout\nimport Header from './content/header'\n//\nexport default (props: any) => {\n  //initalize\n  const {children} = props\n  //---------------------------------------------------------------------\n  return (\n    <main>\n      <Header />\n      <article>{children}</article>\n    </main>\n  )\n}\n","import React from 'react'\n\ntype GreetingsProps = {\n  name: string\n  mark: string\n}\n\nfunction Greetings({name, mark}: GreetingsProps) {\n  return (\n    <div>\n      Hello, {name} {mark}\n    </div>\n  )\n}\n\nGreetings.defaultProps = {\n  mark: '!'\n}\n\nexport default Greetings\n","/**\n * @title\n */\nimport React from 'react'\nimport styled from 'styled-components'\n//components\nimport Layout from 'pages/common/layout/'\nimport {useGlobalState, useGlobalDispatch} from 'contexts/global'\nimport Greetings from 'pages/guide/typescript'\n//context\n\n//\nconst App: React.FC = () => {\n  //context\n  const global = useGlobalState()\n  const dispatch = useGlobalDispatch()\n  //initalize\n  //useState\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <Greetings name=\"wanhwi\" mark=\"$\" />\n      <Content>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'REMOVE', title: 'name'})\n            }}>\n            'REMOVE'\n          </button>\n        </p>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'CREATE', title: 'hey ', name: 1111})\n            }}>\n            'CREATE'\n          </button>\n        </p>\n        <p>\n          <button\n            onClick={() => {\n              dispatch({type: 'UPDATE', title: 'UPDATE ', name: 'react'})\n            }}>\n            'UPDATE1'\n          </button>\n        </p>\n\n        <button\n          onClick={() => {\n            console.log(global)\n          }}>\n          확인\n        </button>\n        <h1>Todo 컴포넌트 제작중</h1>\n        <div>test</div>\n        {/* <counter startCount={3} /> */}\n      </Content>\n    </Layout>\n  )\n}\nexport default App\n//---------------------------------------------------------------------\n\nconst Content = styled.section`\n  p {\n    margin-bottom: 10px;\n  }\n  button {\n    display: inline-block;\n    padding: 10px;\n    font-size: 16px;\n    color: #ff0000;\n    background: #111;\n  }\n`\n","/**\n * @title\n */\nimport React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport useForm from 'react-hook-form'\n//components\nimport Layout from '../common/layout'\nimport {useGlobalState} from 'contexts/global'\n//\n\nconst App: React.FC = props => {\n  const global = useGlobalState()\n\n  //---------------------------------------------------------------------\n  type FormData = {\n    firstName: string\n    lastName: string\n    age: number\n  }\n  //initalize\n  //useState\n  const [state, setState] = useState(() => {\n    console.log(props)\n    return 0\n  })\n  const {register, setValue, handleSubmit, errors} = useForm<FormData>()\n  const onSubmit = handleSubmit(data => {\n    console.log(typeof data.age)\n  })\n  //---------------------------------------------------------------------\n  useEffect(() => {\n    console.log(global)\n  }, [])\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <Form>\n        <form onSubmit={onSubmit}>\n          <div>\n            <label>First Name</label>\n            <input name=\"firstName\" ref={register} defaultValue={'first'} />\n          </div>\n          <div>\n            <label>Last Name</label>\n            <input\n              name=\"lastName\"\n              ref={register}\n              // onChange={e => {\n              //   console.log(e.target.value)\n              // }}\n            />\n          </div>\n          <div>\n            <label>Age</label>\n            <input name=\"age\" type=\"number\" ref={register({required: true})} />\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setValue('age', 222)\n                setValue('lastName', 'luo')\n              }}>\n              SetValue\n            </button>\n            <button type=\"submit\">submit</button>\n          </div>\n        </form>\n      </Form>\n    </Layout>\n  )\n}\nexport default App\n//----------------------------------------------------------\nconst Form = styled.section`\n  form {\n    > div {\n      display: block;\n      margin-bottom: 1rem;\n    }\n    label,\n    input,\n    button {\n      display: inline-block;\n      padding: 1rem 2rem;\n      color: #111;\n      font-size: 16px;\n    }\n    button {\n      color: #fff;\n      background: #111;\n    }\n    input {\n      background: #e1e1e1;\n    }\n  }\n`\n","/**\n * @title\n */\nimport React from \"react\";\n//components\nimport Layout from \"../../common/layout\";\n//\n\nconst App: React.FC = () => {\n  //---------------------------------------------------------------------\n  //initalize\n  //useState\n\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <h1>타이틀</h1>\n      <h1>타이틀</h1>\n      <p>2212121</p>\n    </Layout>\n  );\n};\nexport default App;\n","/**\n * Returns the sum of a and b\n * @param {}\n */\nimport React, {createContext, Dispatch, useReducer, useContext} from 'react'\n\n//export type\nexport type Todo = {\n  id: number\n  text: string\n  done: boolean\n}\nexport type TodoState = Todo[]\n//---------------------------------------------------------------------\ntype Action = {type: 'CREATE'; text: string} | {type: 'TOGGLE'; id: number} | {type: 'REMOVE'; id: number}\ntype TodoDispatch = Dispatch<Action>\nconst TodoStateContext = createContext<TodoState | undefined>(undefined)\nconst TodoDispatchContext = createContext<TodoDispatch | undefined>(undefined)\n//---------------------------------------------------------------------\n/**\n * reducer\n * @param state\n * @param action\n */\n\nfunction todosReducer(state: TodoState, action: Action): TodoState {\n  switch (action.type) {\n    case 'CREATE':\n      const nextId = Math.max(...state.map(todo => todo.id)) + 1\n      return state.concat({\n        id: nextId,\n        text: action.text,\n        done: false\n      })\n    case 'TOGGLE':\n      return state.map(todo => (todo.id === action.id ? {...todo, done: !todo.done} : todo))\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id)\n    default:\n      throw new Error('Unhandled action')\n  }\n}\n//---------------------------------------------------------------------\n/**\n * @title Provider\n */\nexport function TodoContextProvider({children}: {children: React.ReactNode}) {\n  const [todos, dispatch] = useReducer(todosReducer, [\n    {\n      id: 1,\n      text: 'Learn Context API',\n      done: true\n    },\n    {\n      id: 2,\n      text: 'Learn TypeScript',\n      done: true\n    },\n    {\n      id: 3,\n      text: 'Use Context API with TypeScript',\n      done: false\n    }\n  ])\n\n  return (\n    <TodoDispatchContext.Provider value={dispatch}>\n      <TodoStateContext.Provider value={todos}>{children}</TodoStateContext.Provider>\n    </TodoDispatchContext.Provider>\n  )\n}\n/**\n * useState\n */\nexport function useTodoState() {\n  const state = useContext(TodoStateContext)\n  if (!state) throw new Error('TodosProvider not found')\n  return state\n}\n/**\n * useDispatch\n */\nexport function useTodoDispatch() {\n  const dispatch = useContext(TodoDispatchContext)\n  if (!dispatch) throw new Error('TodosProvider not found')\n  return dispatch\n}\n","import React from 'react'\n\ninterface Props {\n  title: string\n}\nconst List: React.FC<Props> = ({title}) => {\n  return <h1>{title}</h1>\n}\nexport default List\n","import React, {useState} from 'react'\nimport styled from 'styled-components'\n//context\nimport {useTodoState, useTodoDispatch} from '../context'\n\nfunction Add() {\n  //context\n  const state = useTodoState()\n  const dispatch = useTodoDispatch()\n  //useState\n  const [value, setValue] = useState('')\n  //---------------------------------------------------------------------\n  const addTodo = (e: React.MouseEvent): void => {\n    dispatch({type: 'CREATE', text: value})\n  }\n  return (\n    <Content>\n      <input type=\"text\" name=\"title\" placeholder=\"입력해주세요\" onChange={e => setValue(e.target.value)} />\n      <button onClick={addTodo}>클릭</button>\n    </Content>\n  )\n}\nexport default Add\n//---------------------------------------------------------------------\nconst Content = styled.div``\n","import React from 'react'\n//context\nimport {useTodoState} from '../context'\n//conent\nimport List from './list'\nimport Add from './add'\n\n//type\ntype Index = {\n  name: string\n  title: string\n}\n\nfunction Index({name, title}: Index) {\n  const state = useTodoState()\n  console.log(state)\n\n  //makeList()\n  const makeList = () => {\n    return state.map((list, index) => {\n      return (\n        <dl>\n          <dt>{list.text}</dt>\n        </dl>\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Add />\n      {makeList()}\n      <List title=\"d\"></List>\n    </React.Fragment>\n  )\n}\nexport default Index\n","/**\n *  @title Todo\n *\n */\nimport React from 'react'\nimport styled from 'styled-components'\n//context\nimport {TodoContextProvider} from './context'\n//layout\nimport Layout from 'pages/common/layout'\n//content\nimport Index from './content/index'\n\nfunction Todo() {\n  return (\n    <TodoContextProvider>\n      <Layout>\n        <Content>\n          <h1>Todo example</h1>\n          <Index name=\"my_name\" title=\"my_title\" />\n        </Content>\n      </Layout>\n    </TodoContextProvider>\n  )\n}\nexport default Todo\n//---------------------------------------------------------------------\nconst Content = styled.section``\n","import React from 'react'\n\ntype IProps = {\n  name: string\n  mark: string\n  optional?: string\n}\n\nfunction Guide({name, mark, optional}: IProps) {\n  return (\n    <div>\n      Hello, {name} {mark}\n      {optional && <p>{optional}</p>}\n    </div>\n  )\n}\n\nGuide.defaultProps = {\n  mark: '!'\n}\n\nexport default Guide\n","/**\n * @title\n */\nimport * as React from 'react'\nimport {useEffect} from 'react'\n//components\nimport Layout from '../common/layout'\nimport Guide from '../../components/ui/guide'\n//\ninterface IProps {\n  data: object\n  onClick: Function\n}\n\n//---------------------------------------------------------------------\nconst Tab: React.FC<IProps> = props => {\n  //---------------------------------------------------------------------\n  //initalize\n  //useState\n  useEffect(() => {\n    console.log('1')\n  })\n  //---------------------------------------------------------------------\n  return (\n    <Layout>\n      <h1>탭</h1>\n      <Guide name=\"wanhwi.son\" mark=\"A\" />\n    </Layout>\n  )\n}\n\nexport default Tab\n","/**\n * @title\n */\nimport React from 'react'\nimport {Route, Switch, HashRouter} from 'react-router-dom'\n//components\n//Page\nimport main from 'pages/main'\nimport form from 'pages/form'\nimport markdown from 'pages/modules/markdown'\nimport todo from 'pages/modules/todo'\n/*ui*/\nimport tab from './pages/ui/tab'\n//---------------------------------------------------------------------\nfunction Router() {\n  //initalize\n  //---------------------------------------------------------------------\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/\" component={main} />\n        <Route exact path=\"/todo\" component={todo} />\n        <Route exact path=\"/form\" component={form} />\n        <Route exact path=\"/markdown\" component={markdown} />\n        <Route exact path=\"/tab\" component={tab} />\n      </Switch>\n    </HashRouter>\n  )\n}\nexport default Router\n","/**\n * @title\n */\nimport React from 'react'\n//router\nimport Router from 'router'\n//---------------------------------------------------------------------\nfunction App() {\n  return <Router />\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n//contexts\nimport {GlobalContextProvider} from 'contexts/global'\nimport {PageContextProvider} from 'contexts/page'\n//App\nimport App from './App'\n//style\nimport './styles/common.scss'\nimport './styles/layout.scss'\n//---------------------------------------------------------------------\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <GlobalContextProvider>\n      <PageContextProvider>\n        <App />\n      </PageContextProvider>\n    </GlobalContextProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}